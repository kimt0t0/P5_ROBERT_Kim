{"version":3,"sources":["product.js"],"names":["getProduct","regeneratorRuntime","async","_context","prev","next","abrupt","fetch","then","httpBodyResponse","json","products","productId","URL","location","href","searchParams","get","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","product","_id","err","alert","error","stop","hydrateProduct","productImgContainer","productImg","scrollColors","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","newColor","_context3","document","getElementById","createElement","appendChild","setAttribute","imageUrl","altTxt","textContent","name","price","description","colors","value","color","append","t0","finish","_context2","awrap","sent","Cart","_classCallCheck","this","inventory","localStorage","itemsCounter","itemsList","totalPrice","cart","cartProduct","quantity","getProductId","console","log","index","productColor","getProductQuantity","productQuantity","addEventListener","newCartProduct","_context4"],"mappings":"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","file":"product.min.js","sourcesContent":["/* *** GÉNÉRAL *** */\r\n\r\n/* Récupération données produit */\r\nasync function getProduct() {\r\n    return fetch(\"http://localhost:3000/api/products\")\r\n      .then(function(httpBodyResponse) {\r\n        return httpBodyResponse.json();\r\n      })\r\n      /* récupération de l'ensemble des produits: */\r\n      .then(function(products) {\r\n        /* récupération id dans l'url: */\r\n        var productId =  new URL(location.href).searchParams.get(\"id\");\r\n          /* recherche du produit correspondant: */\r\n          for (product of products) { \r\n              if (product._id == productId) {  \r\n                return product;}\r\n          }\r\n      })\r\n      .catch(function(error) {\r\n          alert(error);\r\n      });\r\n}\r\n\r\n/* *** AFFICHAGE PARTIE PRODUIT *** */\r\n/* Déclencheur */\r\n(async function() {\r\n    var product = await getProduct();\r\n    hydrateProduct(product);\r\n})()\r\n\r\n/* Récupération contenu */\r\nasync function hydrateProduct(product) {\r\n    /* Affichage image */\r\n    var productImgContainer = document.getElementById(\"item__img\");\r\n    var productImg = document.createElement(\"img\");\r\n    productImgContainer.appendChild(productImg);\r\n    productImg.setAttribute(\"src\", product.imageUrl);\r\n    productImg.setAttribute(\"alt\", product.altTxt);\r\n\r\n    /* Affichage titre */\r\n    document.getElementById(\"title\").textContent = product.name;\r\n    /* Affichage prix */\r\n    document.getElementById(\"price\").textContent = product.price;\r\n    /* Affichage description */\r\n    document.getElementById(\"description\").textContent = product.description;\r\n\r\n    /*Menu couleurs */\r\n    var scrollColors = document.getElementById(\"colors\");\r\n    for (color of product.colors) {\r\n        var newColor = document.createElement(\"option\");\r\n        newColor.setAttribute(\"value\", color);\r\n        newColor.textContent = color;\r\n        scrollColors.append(newColor);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n/* *** GESTION PANIER *** */\r\n\r\n/* CLASSES */\r\n/* Classe pour l'objet panier */\r\nclass Cart {\r\n    constructor () {\r\n        this.inventory = localStorage;\r\n        this.itemsCounter = 0;\r\n        this.itemsList = {};\r\n        this.totalPrice = 0;\r\n    }\r\n\r\n    /* fonction pour vérifier si un objet est déjà présent dans le panier */\r\n\r\n    /* fonction pour créer un nouvel objet dans le panier */\r\n\r\n    /* fonction pour ajouter une quantité à un objet existant dans le panier */\r\n}\r\n\r\nvar cart = new Cart();\r\n\r\n/* Classe pour l'objet à ajouter */\r\nclass cartProduct {\r\n    constructor(_id, color, quantity) {\r\n        this._id = _id;\r\n        this.color = color;\r\n        this.quantity = quantity;\r\n    }\r\n}\r\n\r\n/* FONCTIONS */\r\nfunction getProductId(product) {\r\n    console.log(product._id);\r\n    return product._id;\r\n}\r\n\r\nfunction getProductColor() {\r\n    var select = document.getElementById(\"colors\"),\r\n        index = select.selectedIndex;\r\n    var productColor = select.options[ index ].value;\r\n    console.log(productColor);\r\n    return productColor;\r\n}\r\n\r\nfunction getProductQuantity() {\r\n    var productQuantity = document.getElementById(\"quantity\").value;\r\n    console.log(productQuantity);\r\n    return productQuantity;\r\n}\r\n\r\n\r\n/* ACTIONS */\r\n/* Déclenchement action */\r\ndocument.getElementById(\"addToCart\").addEventListener(\"click\", async function(e) {\r\n    console.log(\"clic enregistré\");\r\n    /* récupérer l'id du produit et stocker dans var _id*/\r\n    let productId = getProductId(product);\r\n    console.log(productId);\r\n\r\n    /* récupérer la couleur et stocker dans var color */\r\n    let productColor = getProductColor();\r\n    console.log(productColor);\r\n\r\n    /* récupérer la quantité et stocker dans var quantity */\r\n    let productQuantity = getProductQuantity()\r\n    console.log(productQuantity);\r\n\r\n    /* créer un objet newProduct */\r\n    var newCartProduct = cartProduct(productId, productColor, productQuantity);\r\n    console.log(newCartProduct);\r\n});\r\n\r\n"]}