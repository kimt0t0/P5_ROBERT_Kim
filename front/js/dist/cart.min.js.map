{"version":3,"sources":["cart.js"],"names":["productId","productColor","productQuantity","productImgUrl","settingsQuantityInput","deleteText","cart","localStorage","cartCounter","getProduct","id","regeneratorRuntime","async","_context","prev","next","abrupt","fetch","then","httpBodyResponse","json","products","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","product","_id","err","error","alert","stop","setFormAttributes","inputName","regexModel","min","max","title","_context2","setAttribute","hydrateDom","totalPrice","cartKey","cartItem","cartItemImg","productImg","cartItemContent","cartItemContentDescr","cartItemContentTitle","cartItemContentColor","cartItemContentPrice","cartItemSettings","settingsQuantity","settingsQuantityText","deleteContainer","userForm","_context3","document","createElement","imageUrl","textContent","name","Number","price","appendChild","e","target","value","getElementById","remove","addEventListener","firstName","userInputs","i","userInputsList","length","testRegexp","test","splitKey","_context4","key","getItem","awrap","sent","console","log"],"mappings":"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","file":"cart.min.js","sourcesContent":["/* *** VARIABLES *** */\r\nvar cart = localStorage;\r\n\r\nvar cartCounter = 0;\r\nvar totalPrice = 0;\r\n\r\nvar productId, productColor, productQuantity, productImgUrl;\r\nvar settingsQuantityInput, deleteText;\r\n\r\n\r\n/* *** FONCTIONS *** */\r\n\r\n/* GÉNÉRAL */\r\n/* Accès aux infos produit sur serveur */\r\nasync function getProduct(id) {\r\n    return fetch(\"http://localhost:3000/api/products\")\r\n      .then(function(httpBodyResponse) {\r\n        return httpBodyResponse.json();\r\n      })\r\n      .then(function(products) {\r\n          for (product of products) { \r\n              if (product._id == id) {  \r\n                return product;}\r\n          }\r\n      })\r\n      .catch(function(error) {\r\n          alert(error);\r\n      });\r\n}\r\n\r\n/* Attributs du formulaire */\r\nasync function setFormAttributes(inputName, regexModel, min, max, title) {\r\n    inputName.setAttribute(\"pattern\", regexModel);\r\n    inputName.setAttribute(\"min-length\", min);\r\n    inputName.setAttribute(\"max-length\", max);\r\n    inputName.setAttribute(\"title\", title);\r\n}\r\n\r\n\r\n/* DOM DYNAMIQUE */\r\nasync function hydrateDom(product, cartCounter, totalPrice, productQuantity, cartKey) {\r\n    /* Création balises */\r\n    let cartItem = document.createElement(\"article\");\r\n    let cartItemImg = document.createElement(\"div\");\r\n    let productImg = document.createElement(\"img\");\r\n\r\n    let cartItemContent = document.createElement(\"div\");\r\n    let cartItemContentDescr = document.createElement(\"div\");\r\n    let cartItemContentTitle = document.createElement(\"h2\");\r\n    let cartItemContentColor = document.createElement(\"p\");\r\n    let cartItemContentPrice = document.createElement(\"p\");\r\n\r\n\r\n    let cartItemSettings = document.createElement(\"div\");\r\n\r\n    let settingsQuantity = document.createElement(\"div\");\r\n    let settingsQuantityText = document.createElement(\"p\");\r\n    settingsQuantityInput = document.createElement(\"input\");\r\n\r\n    let deleteContainer = document.createElement(\"div\");\r\n    deleteText = document.createElement(\"p\");\r\n\r\n    /* Attributs et contenu des balises créées */\r\n    cartItem.setAttribute(\"class\", \"cart__item\");\r\n    cartItem.setAttribute(\"data-id\", productId);\r\n    cartItem.setAttribute(\"data-color\", productColor);\r\n\r\n    cartItemImg.setAttribute(\"class\", \"cart__item__img\")\r\n\r\n    productImg.setAttribute(\"src\", product.imageUrl);\r\n    productImg.setAttribute(\"alt\", product.altTxt);\r\n\r\n\r\n    cartItemContent.setAttribute(\"class\", \"cart__item__content\");\r\n    cartItemContentDescr.setAttribute(\"class\", \"cart__item__content__description\")\r\n    cartItemContentTitle.textContent = product.name;\r\n    cartItemContentColor.textContent = productColor;\r\n    cartItemContentPrice.textContent = Number(product.price) + \" €\";\r\n\r\n    cartItemSettings.setAttribute(\"class\", \"cart__item__content__settings\");\r\n    \r\n    settingsQuantity.setAttribute(\"class\", \"cart__item__content__settings__quantity\");\r\n    settingsQuantityText.textContent = \"Qté : \" + productQuantity;\r\n    settingsQuantityInput.setAttribute(\"type\", \"number\");\r\n    settingsQuantityInput.setAttribute(\"class\", \"itemQuantity\");\r\n    settingsQuantityInput.setAttribute(\"name\", \"itemQuantity\");\r\n    settingsQuantityInput.setAttribute(\"min\", \"1\");\r\n    settingsQuantityInput.setAttribute(\"max\", \"100\");\r\n    settingsQuantityInput.setAttribute(\"value\", productQuantity);\r\n\r\n    deleteContainer.setAttribute(\"class\", \"cart__item__content__settings__delete\");\r\n    deleteText.setAttribute(\"class\", \"deleteItem\");\r\n    deleteText.textContent = \"Supprimer\";\r\n\r\n\r\n    /* Position des balises créées */\r\n    document.getElementById(\"cart__items\").appendChild(cartItem);\r\n    cartItem.appendChild(cartItemImg);\r\n    cartItemImg.appendChild(productImg);\r\n\r\n    document.getElementById(\"cart__items\").appendChild(cartItemContent);\r\n    cartItemContent.appendChild(cartItemContentDescr);\r\n    cartItemContentDescr.appendChild(cartItemContentTitle);\r\n    cartItemContentDescr.appendChild(cartItemContentColor);\r\n    cartItemContentDescr.appendChild(cartItemContentPrice);\r\n\r\n\r\n    document.getElementById(\"cart__items\").appendChild(cartItemSettings);\r\n\r\n    cartItemSettings.appendChild(settingsQuantity);\r\n    settingsQuantity.appendChild(settingsQuantityText);\r\n    settingsQuantity.appendChild(settingsQuantityInput);\r\n\r\n    cartItemSettings.appendChild(deleteContainer);\r\n    deleteContainer.appendChild(deleteText);\r\n\r\n    /* Attributs et contenus de balises existantes */\r\n    document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n    document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n\r\n        /* MODIFICATIONS DU PANIER */\r\n\r\n    /* /* Modification quantité: */\r\n    settingsQuantityInput.addEventListener(\"change\", function(e) {\r\n        /* (suppression de la quantité originale du produit dans compteur panier et prix total: ) */\r\n        cartCounter -= Number(productQuantity);\r\n        totalPrice -= Number(productQuantity) * Number(product.price);\r\n        /* (màj nouvelle quantité du produit: ) */\r\n        productQuantity = e.target.value;\r\n        settingsQuantityText.textContent = \"Qté : \" + productQuantity;\r\n        /* (màj compteur panier et prix total: ) */\r\n        cartCounter += Number(productQuantity);\r\n        totalPrice += Number(productQuantity) * Number(product.price);\r\n        document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n        document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n        /* (màj local storage: ) */\r\n        console.log(\"ancienne quantité: \" + cart[cartKey]);\r\n        cart[cartKey] = productQuantity;\r\n        console.log(\"nouvelle quantité: \" + cart[cartKey]);\r\n    });\r\n    \r\n    /* Suppression d'un produit du panier: */\r\n    deleteText.addEventListener(\"click\", function(e) {\r\n        cartCounter -= Number(productQuantity);\r\n        totalPrice -= Number(productQuantity) * Number(product.price);\r\n        let cartKey = productId + \" \" + productColor;\r\n        cart.removeItem(cartKey);\r\n        document.getElementById(productId).remove(); /* ne fonctionne pas directement au clic... testé aussi avec Element.closest(\"article\") */\r\n    });\r\n\r\n    /* SUIVI VÉRIFICATIONS DU FORMULAIRE */\r\n    let userForm = document.getElementById(\"cart__order__form\");\r\n    userForm.addEventListener(\"submit\", function(e) {\r\n        var userOrder = [];\r\n\r\n        let userInputs = userForm.getElementsByTagName(\"input\");\r\n        let firstName = userInputs.getElementById(\"firstName\");\r\n        let lastName = userInputs.getElementById(\"lastName\");\r\n        let address = userInputs.getElementById(\"address\");\r\n        let city = userInputs.getElementById(\"city\");\r\n        let email = userInputs.getElementById(\"email\");\r\n\r\n        let userInputsList = [firstName, lastName, address, city, email];\r\n        let testRegexp = []\r\n        if ( firstName.value != /[\\w\\D- ']{2, 35}/\r\n        ) {\r\n            for (let i = 0; userInputsList.length; i++) {\r\n                let test = testRegexp[i].test(userInputsList[i]);\r\n                if (test == true) {\r\n                    /* pass */\r\n                }\r\n                else {\r\n                    alert(\"Veuillez compléter tous les champs au bon format pour finaliser votre commande :-)\");\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    /* let firstName = document.getElementById('firstName');\r\n    let lastName = document.getElementById('lastName');\r\n    let address = document.getElementById('address');\r\n    let city = document.getElementById('city');\r\n    let email = document.getElementById('email');\r\n\r\n    setFormAttributes(firstName, \"[\\\\w\\\\D]{2, 35}\", 2, 35, \"Entrez uniquement des lettres et '-'.\");\r\n    setFormAttributes(lastName, \"[\\\\w\\\\D]{2, 35}\", 2, 35, \"Entrez uniquement des lettres et '-'.\");\r\n    setFormAttributes(address, \"[\\\\d]{0, 4}[, ]{0, 1}\\[\\\\w\\\\D]{4, 35}\", 5, 35, \"Entrez une adresse.\\nExemple: 14, rue des Sufragettes\");\r\n    setFormAttributes(city, \"[\\\\w\\\\D]{2, 50}\", 2, 50, \"Entrez uniquement des lettres, '-' et ' '\");\r\n    setFormAttributes(email, \"[\\\\w]{2, 50}[@]{1}{\\\\w]{2, 20}[.]{1}[com|fr|net|org]{1}\", 2, 50, \"Entrez une adresse email valide.\"); */\r\n}\r\n\r\n/* *** ACTIONS *** */\r\n(async function() {\r\n    /* POUR CHAQUE PRODUIT DU PANIER... */\r\n    for(let i = 0; i < cart.length; i++){\r\n        /* Infos en local storage: */\r\n        var cartKey = localStorage.key(i);\r\n        var splitKey = cartKey.split(\" \");\r\n        productId = splitKey[0];\r\n        productColor = splitKey[1];\r\n        /* Quantité (inpupt): */\r\n        productQuantity = cart.getItem(cartKey);\r\n        /* Màj compteur d'items */\r\n        cartCounter += Number(productQuantity);\r\n\r\n        /* Infos serveur: */\r\n        var product = await getProduct(productId);\r\n        totalPrice += Number(productQuantity) * Number(product.price);\r\n\r\n        /* Génération contenu page au loading: */\r\n        var pageContent = await hydrateDom(product, cartCounter, totalPrice, productQuantity, cartKey);\r\n    }\r\n    console.log(userForm);\r\n\r\n})()\r\n\r\n        \r\n"]}