{"version":3,"sources":["cart.js"],"names":["productId","productColor","productQuantity","productImgUrl","cart","localStorage","cartCounter","getProduct","id","regeneratorRuntime","async","_context","prev","next","abrupt","fetch","then","httpBodyResponse","json","products","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","product","_id","err","error","alert","stop","setFormAttributes","inputName","regexModel","min","max","title","_context2","setAttribute","hydrateDom","totalPrice","cartKey","cartItem","cartItemImg","productImg","cartItemContent","cartItemContentDescr","cartItemContentTitle","cartItemContentColor","cartItemContentPrice","cartItemSettings","settingsQuantity","settingsQuantityText","settingsQuantityInput","deleteContainer","deleteText","_context3","document","createElement","getElementById","appendChild","textContent","e","Number","price","target","closest","remove","preventDefault","firstName","value","trim","errorFName","style","console","color","log","length","key","i","splitKey","split","userForm","addEventListener","test"],"mappings":"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","file":"cart.min.js","sourcesContent":["/* *** VARIABLES *** */\r\nvar cart = localStorage;\r\n\r\nvar cartCounter = 0;\r\nvar totalPrice = 0;\r\n\r\nvar productId, productColor, productQuantity, productImgUrl;\r\n\r\n\r\n/* *** FONCTIONS *** */\r\n\r\n/* GÉNÉRAL */\r\n/* Accès aux infos produit sur serveur */\r\nasync function getProduct(id) {\r\n    return fetch(\"http://localhost:3000/api/products\")\r\n      .then(function(httpBodyResponse) {\r\n        return httpBodyResponse.json();\r\n      })\r\n      .then(function(products) {\r\n          for (product of products) { \r\n              if (product._id == id) {  \r\n                return product;}\r\n          }\r\n      })\r\n      .catch(function(error) {\r\n          alert(error);\r\n      });\r\n}\r\n\r\n/* Attributs du formulaire */\r\nasync function setFormAttributes(inputName, regexModel, min, max, title) {\r\n    inputName.setAttribute(\"pattern\", regexModel);\r\n    inputName.setAttribute(\"min-length\", min);\r\n    inputName.setAttribute(\"max-length\", max);\r\n    inputName.setAttribute(\"title\", title);\r\n}\r\n\r\n\r\n/* *** DOM DYNAMIQUE ***  */\r\nasync function hydrateDom(product, cartCounter, totalPrice, productQuantity, cartKey) {\r\n    /* Création balises */\r\n    let cartItem = document.createElement(\"article\");\r\n    let cartItemImg = document.createElement(\"div\");\r\n    let productImg = document.createElement(\"img\");\r\n\r\n    let cartItemContent = document.createElement(\"div\");\r\n    let cartItemContentDescr = document.createElement(\"div\");\r\n    let cartItemContentTitle = document.createElement(\"h2\");\r\n    let cartItemContentColor = document.createElement(\"p\");\r\n    let cartItemContentPrice = document.createElement(\"p\");\r\n\r\n\r\n    let cartItemSettings = document.createElement(\"div\");\r\n\r\n    let settingsQuantity = document.createElement(\"div\");\r\n    let settingsQuantityText = document.createElement(\"p\");\r\n    let settingsQuantityInput = document.createElement(\"input\");\r\n\r\n    let deleteContainer = document.createElement(\"div\");\r\n    let deleteText = document.createElement(\"p\");\r\n\r\n\r\n    /* Position des balises créées */\r\n    document.getElementById(\"cart__items\").appendChild(cartItem);\r\n    cartItem.appendChild(cartItemImg);\r\n    cartItemImg.appendChild(productImg);\r\n\r\n    cartItem.appendChild(cartItemContent);\r\n    cartItemContent.appendChild(cartItemContentDescr);\r\n    cartItemContentDescr.appendChild(cartItemContentTitle);\r\n    cartItemContentDescr.appendChild(cartItemContentColor);\r\n    cartItemContentDescr.appendChild(cartItemContentPrice);\r\n\r\n\r\n    cartItemContent.appendChild(cartItemSettings);\r\n\r\n    cartItemSettings.appendChild(settingsQuantity);\r\n    settingsQuantity.appendChild(settingsQuantityText);\r\n    settingsQuantity.appendChild(settingsQuantityInput);\r\n\r\n    cartItemSettings.appendChild(deleteContainer);\r\n    deleteContainer.appendChild(deleteText);\r\n\r\n\r\n    /* Attributs et contenu des balises créées */\r\n    cartItem.setAttribute(\"class\", \"cart__item\");\r\n    cartItem.setAttribute(\"data-id\", productId);\r\n    cartItem.setAttribute(\"data-color\", productColor);\r\n\r\n    cartItemImg.setAttribute(\"class\", \"cart__item__img\")\r\n\r\n    productImg.setAttribute(\"src\", product.imageUrl);\r\n    productImg.setAttribute(\"alt\", product.altTxt);\r\n\r\n\r\n    cartItemContent.setAttribute(\"class\", \"cart__item__content\");\r\n    cartItemContentDescr.setAttribute(\"class\", \"cart__item__content__description\")\r\n    cartItemContentTitle.textContent = product.name;\r\n    cartItemContentColor.textContent = productColor;\r\n    cartItemContentPrice.textContent = Number(product.price) + \" €\";\r\n\r\n    cartItemSettings.setAttribute(\"class\", \"cart__item__content__settings\");\r\n    \r\n    settingsQuantity.setAttribute(\"class\", \"cart__item__content__settings__quantity\");\r\n    settingsQuantityText.textContent = \"Qté : \" + productQuantity;\r\n    settingsQuantityInput.setAttribute(\"type\", \"number\");\r\n    settingsQuantityInput.setAttribute(\"class\", \"itemQuantity\");\r\n    settingsQuantityInput.setAttribute(\"name\", \"itemQuantity\");\r\n    settingsQuantityInput.setAttribute(\"min\", \"1\");\r\n    settingsQuantityInput.setAttribute(\"max\", \"100\");\r\n    settingsQuantityInput.setAttribute(\"value\", productQuantity);\r\n\r\n    deleteContainer.setAttribute(\"class\", \"cart__item__content__settings__delete\");\r\n    deleteText.setAttribute(\"class\", \"deleteItem\");\r\n    deleteText.textContent = \"Supprimer\";\r\n\r\n    /* Attributs et contenus de balises existantes */\r\n    document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n    document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n\r\n        /* MODIFICATIONS DU PANIER */\r\n\r\n    /* /* Modification quantité: */\r\n    settingsQuantityInput.addEventListener(\"change\", function(e) {\r\n        /* (suppression de la quantité originale du produit dans compteur panier et prix total: ) */\r\n        cartCounter -= Number(productQuantity);\r\n        totalPrice -= Number(productQuantity) * Number(product.price);\r\n        /* (màj nouvelle quantité du produit: ) */\r\n        productQuantity = e.target.value;\r\n        settingsQuantityText.textContent = \"Qté : \" + productQuantity;\r\n        /* (màj compteur panier et prix total: ) */\r\n        cartCounter += Number(productQuantity);\r\n        totalPrice += Number(productQuantity) * Number(product.price);\r\n        document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n        document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n        /* (màj local storage: ) */\r\n        console.log(\"ancienne quantité: \" + cart[cartKey]);\r\n        cart[cartKey] = productQuantity;\r\n        console.log(\"nouvelle quantité: \" + cart[cartKey]);\r\n    });\r\n    \r\n    /* Suppression d'un produit du panier: */\r\n    deleteText.addEventListener(\"click\", function(e) {\r\n        cartCounter -= Number(productQuantity);\r\n        totalPrice -= Number(productQuantity) * Number(product.price);\r\n        let cartKey = productId + \" \" + productColor;\r\n        cart.removeItem(cartKey);\r\n        document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n        document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n        e.target.closest(\"article\").remove();\r\n    });\r\n\r\n    /* Suivi vérification formulaire */\r\n    let userForm = document.getElementById(\"cart__order__form\");\r\n    userForm.addEventListener(\"submit\", function(e) {\r\n        e.preventDefault();\r\n\r\n        let firstName = document.getElementById(\"firstName\");\r\n        let regWords = /^[a-zA-Z-\\s\\']+$/;\r\n        if (firstName.value.trim() == \"\") { // (trim retire espaces au début et fin de l'input)\r\n            let errorFName = document.getElementById(\"firstNameErrorMsg\");\r\n            errorFName.textContent = \"Veuillez compléter ce champ.\";\r\n            errorFName.style.color = \"red\";\r\n            e.preventDefault();\r\n        } else if (regWords.test(firstName.value) == false) {\r\n            let errorFName = document.getElementById(\"firstNameErrorMsg\");\r\n            errorFName.textContent = \"Le nom doit comporter des lettres, tirets et apostrophes uniquement.\";\r\n            errorFName.style.color = \"red\";\r\n            e.preventDefault();\r\n        }\r\n        else {\r\n            console.log(\"commande ok\");\r\n        }\r\n    });\r\n\r\n}\r\n\r\n/* *** ACTIONS *** */\r\n(async function() {\r\n    /* POUR CHAQUE PRODUIT DU PANIER... */\r\n    for(let i = 0; i < cart.length; i++){\r\n        /* Infos en local storage: */\r\n        var cartKey = localStorage.key(i);\r\n        var splitKey = cartKey.split(\" \");\r\n        productId = splitKey[0];\r\n        productColor = splitKey[1];\r\n        /* Quantité (inpupt): */\r\n        productQuantity = cart.getItem(cartKey);\r\n        /* Màj compteur d'items */\r\n        cartCounter += Number(productQuantity);\r\n\r\n        /* Infos serveur: */\r\n        var product = await getProduct(productId);\r\n        totalPrice += Number(productQuantity) * Number(product.price);\r\n\r\n        /* Génération contenu page au loading: */\r\n        var pageContent = await hydrateDom(product, cartCounter, totalPrice, productQuantity, cartKey);\r\n    }\r\n\r\n})()\r\n\r\n        \r\n"]}