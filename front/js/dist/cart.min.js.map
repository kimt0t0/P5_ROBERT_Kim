{"version":3,"sources":["cart.js"],"names":["productId","productColor","productQuantity","productImgUrl","cart","localStorage","cartCounter","totalPrice","Contact","firstName","lastName","address","city","email","_classCallCheck","this","value","getProduct","id","regeneratorRuntime","async","_context","prev","next","abrupt","fetch","then","httpBodyResponse","json","products","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","product","_id","err","error","alert","stop","setFormAttributes","inputName","regexModel","min","max","title","_context2","setAttribute","createProducts","i","cartKey","splitKey","_context3","length","key","split","includes","checkForm","e","regNames","inputsToTest","regexToTest","order","_context4","document","getElementById","test","name","preventDefault","console","log","contact","awrap","sent","orderData","postOrder","headers","Content-type","body","JSON","response","hydrateDom","cartItem","cartItemImg","productImg","cartItemContent","cartItemContentDescr","cartItemContentTitle","cartItemContentColor","cartItemContentPrice","cartItemSettings","settingsQuantity","settingsQuantityText","settingsQuantityInput","deleteContainer","deleteText","_context6","createElement","regAddress","regEmail","appendChild","errMessage","textContent","imageUrl","altTxt","Number","price","data","method","addEventListener","removeItem","target","closest","remove"],"mappings":"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","file":"cart.min.js","sourcesContent":["/* *** VARIABLES *** */\r\nconst cart = localStorage;\r\n\r\nvar cartCounter = 0;\r\nvar totalPrice = 0;\r\n\r\nvar productId, productColor, productQuantity, productImgUrl;\r\n\r\n\r\n\r\n/* *** CLASSES *** */\r\n\r\nclass Contact {\r\n    constructor (firstName, lastName, address, city, email) {\r\n        this.firstName = firstName.value;\r\n        this.lastName = lastName.value;\r\n        this.address = address.value;\r\n        this.city = city.value;\r\n        this.email = email.value;\r\n    }\r\n\r\n    getFirstName() {\r\n        return this.firstName;\r\n    }\r\n\r\n    getLastName() {\r\n        return this.lastName;\r\n    }\r\n\r\n    getAddress() {\r\n        return this.address;\r\n    }\r\n\r\n    getCity() {\r\n        return this.city;\r\n    }\r\n\r\n    getEmail() {\r\n        return this.email;\r\n    }\r\n}\r\n\r\n\r\n\r\n/* *** FONCTIONS *** */\r\n\r\n/* GÉNÉRAL */\r\n/* Accès aux infos produit sur serveur */\r\nasync function getProduct(id) {\r\n    return fetch(\"http://localhost:3000/api/products\")\r\n      .then(function(httpBodyResponse) {\r\n        return httpBodyResponse.json();\r\n      })\r\n      .then(function(products) {\r\n          for (product of products) { \r\n              if (product._id == id) {  \r\n                return product;}\r\n          }\r\n      })\r\n      .catch(function(error) {\r\n          alert(error);\r\n      });\r\n}\r\n\r\n/* Attributs du formulaire */\r\nasync function setFormAttributes(inputName, regexModel, min, max, title) {\r\n    inputName.setAttribute(\"pattern\", regexModel);\r\n    inputName.setAttribute(\"min-length\", min);\r\n    inputName.setAttribute(\"max-length\", max);\r\n    inputName.setAttribute(\"title\", title);\r\n}\r\n\r\n/* FORMULAIRE */\r\n\r\n/* Création tableau commande */\r\nasync function createProducts(cart) {\r\n    let products = [];\r\n    for(let i = 0; i < cart.length; i++) {\r\n        let cartKey = localStorage.key(i);\r\n        let splitKey = cartKey.split(\" \");\r\n        productId = splitKey[0];\r\n        if (products.includes(productId)) {\r\n        }\r\n        else {\r\n            products[i] = productId;\r\n        }\r\n    }\r\n    return products;\r\n}\r\n\r\n/* Vérification et création objet contact + tableau produits */\r\nasync function checkForm(e) {\r\n\r\n    // Éléments d'input à check:\r\n    let firstName = document.getElementById(\"firstName\");\r\n    let lastName = document.getElementById(\"lastName\");\r\n    let address = document.getElementById(\"address\");\r\n    let city = document.getElementById(\"city\");\r\n    let email = document.getElementById(\"email\");\r\n\r\n    // Regexs pour check:\r\n    const regNames = /^[a-zA-Z\\s'-]+$/;\r\n    const regAddress = /^[a-zA-Z0-9\\s,'-]*$/; //problème: valide les entrées contenant uniquement des chiffres...\r\n    const regEmail = /^[A-Za-z0-9._%+-]+@([A-Za-z0-9-]+\\.)+([A-Za-z0-9]{2,4})$/;\r\n\r\n    let inputsToTest = [firstName, lastName, address, city, email];\r\n    let regexToTest = [regNames, regNames, regAddress, regNames, regEmail];\r\n\r\n    //Indicateur mauvais remplissage:        \r\n    let error = false;\r\n    \r\n    // Pour chaque élément de la liste d'input...:\r\n    for (let i = 0; i < inputsToTest.length; i++) {\r\n        // Test:\r\n        test = regexToTest[i].test(inputsToTest[i].value);\r\n        // Si test faux ne pas envoyer et message d'erreur:\r\n        if (test == false) {\r\n            errMessage = document.getElementById(inputsToTest[i].name + \"ErrorMsg\");\r\n            errMessage.textContent = \"Ce champ est vide ou n'a pas été complété correctement.\";\r\n            error = true;\r\n        }\r\n    }\r\n    \r\n    if (error == true) {\r\n        e.preventDefault();\r\n        return alert(\"Votre commande n'a pas pu être finalisée.\\nVeuillez vérifier que vous avez complété correctement le formulaire.\\n\\nEn cas de problème, n'hésitez pas à contacter notre support\");\r\n    }\r\n    else {\r\n        e.preventDefault();\r\n        console.log(\"Envoi du formulaire...\")\r\n        contact = new Contact(firstName, lastName, address, city, email);\r\n        const products = await createProducts(cart);\r\n        orderData = {\r\n            contact,\r\n            products\r\n        };\r\n        let order = await postOrder(orderData);\r\n        console.log(order);\r\n    }\r\n\r\n}\r\n\r\n/* Envoi commande */\r\nasync function postOrder(data) {\r\n    fetch(\"http://localhost:3000/api/products/order\", {\r\n        method: \"POST\",\r\n        headers: {\"Content-type\": \"application/json\"},\r\n        body: JSON.stringify(data),\r\n    })\r\n    .then(function(response) {\r\n        return response.json();\r\n    })\r\n    .then(function(json){\r\n        return console.log(\"Succès: \", json);\r\n    })\r\n    .catch(function(err) {\r\n        return console.log(\"Erreur: \", err);\r\n    })\r\n}\r\n\r\n\r\n/* *** DOM DYNAMIQUE ***  */\r\nasync function hydrateDom(product, cartCounter, totalPrice, productQuantity, cartKey) {\r\n    /* ÉLÉMENTS A GÉNÉRER ET PLACER POUR AFFICHAGE */\r\n    /* Création balises */\r\n    let cartItem = document.createElement(\"article\");\r\n    let cartItemImg = document.createElement(\"div\");\r\n    let productImg = document.createElement(\"img\");\r\n\r\n    let cartItemContent = document.createElement(\"div\");\r\n    let cartItemContentDescr = document.createElement(\"div\");\r\n    let cartItemContentTitle = document.createElement(\"h2\");\r\n    let cartItemContentColor = document.createElement(\"p\");\r\n    let cartItemContentPrice = document.createElement(\"p\");\r\n\r\n\r\n    let cartItemSettings = document.createElement(\"div\");\r\n\r\n    let settingsQuantity = document.createElement(\"div\");\r\n    let settingsQuantityText = document.createElement(\"p\");\r\n    let settingsQuantityInput = document.createElement(\"input\");\r\n\r\n    let deleteContainer = document.createElement(\"div\");\r\n    let deleteText = document.createElement(\"p\");\r\n\r\n\r\n    /* Position des balises créées */\r\n    document.getElementById(\"cart__items\").appendChild(cartItem);\r\n    cartItem.appendChild(cartItemImg);\r\n    cartItemImg.appendChild(productImg);\r\n\r\n    cartItem.appendChild(cartItemContent);\r\n    cartItemContent.appendChild(cartItemContentDescr);\r\n    cartItemContentDescr.appendChild(cartItemContentTitle);\r\n    cartItemContentDescr.appendChild(cartItemContentColor);\r\n    cartItemContentDescr.appendChild(cartItemContentPrice);\r\n\r\n    cartItemContent.appendChild(cartItemSettings);\r\n\r\n    cartItemSettings.appendChild(settingsQuantity);\r\n    settingsQuantity.appendChild(settingsQuantityText);\r\n    settingsQuantity.appendChild(settingsQuantityInput);\r\n\r\n    cartItemSettings.appendChild(deleteContainer);\r\n    deleteContainer.appendChild(deleteText);\r\n\r\n\r\n    /* Attributs et contenu des balises créées */\r\n    cartItem.setAttribute(\"class\", \"cart__item\");\r\n    cartItem.setAttribute(\"data-id\", productId);\r\n    cartItem.setAttribute(\"data-color\", productColor);\r\n\r\n    cartItemImg.setAttribute(\"class\", \"cart__item__img\")\r\n\r\n    productImg.setAttribute(\"src\", product.imageUrl);\r\n    productImg.setAttribute(\"alt\", product.altTxt);\r\n\r\n\r\n    cartItemContent.setAttribute(\"class\", \"cart__item__content\");\r\n    cartItemContentDescr.setAttribute(\"class\", \"cart__item__content__description\")\r\n    cartItemContentTitle.textContent = product.name;\r\n    cartItemContentColor.textContent = productColor;\r\n    cartItemContentPrice.textContent = Number(product.price) + \" €\";\r\n\r\n    cartItemSettings.setAttribute(\"class\", \"cart__item__content__settings\");\r\n    \r\n    settingsQuantity.setAttribute(\"class\", \"cart__item__content__settings__quantity\");\r\n    settingsQuantityText.textContent = \"Qté : \" + productQuantity;\r\n    settingsQuantityInput.setAttribute(\"type\", \"number\");\r\n    settingsQuantityInput.setAttribute(\"class\", \"itemQuantity\");\r\n    settingsQuantityInput.setAttribute(\"name\", \"itemQuantity\");\r\n    settingsQuantityInput.setAttribute(\"min\", \"1\");\r\n    settingsQuantityInput.setAttribute(\"max\", \"100\");\r\n    settingsQuantityInput.setAttribute(\"value\", productQuantity);\r\n\r\n    deleteContainer.setAttribute(\"class\", \"cart__item__content__settings__delete\");\r\n    deleteText.setAttribute(\"class\", \"deleteItem\");\r\n    deleteText.textContent = \"Supprimer\";\r\n\r\n    /* Attributs et contenus de balises existantes */\r\n    document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n    document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n\r\n        /* MODIFICATIONS DU PANIER */\r\n\r\n    /* /* Modification quantité: */\r\n    settingsQuantityInput.addEventListener(\"change\", function(e) {\r\n        /* (suppression de la quantité originale du produit dans compteur panier et prix total: ) */\r\n        cartCounter -= Number(productQuantity);\r\n        totalPrice -= Number(productQuantity) * Number(product.price);\r\n        /* (màj nouvelle quantité du produit: ) */\r\n        productQuantity = e.target.value;\r\n        settingsQuantityText.textContent = \"Qté : \" + productQuantity;\r\n        /* (màj compteur panier et prix total: ) */\r\n        cartCounter += Number(productQuantity);\r\n        totalPrice += Number(productQuantity) * Number(product.price);\r\n\r\n        document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n        document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n        /* (màj local storage: ) */\r\n        cart[cartKey] = productQuantity;\r\n    });\r\n    \r\n    /* Suppression d'un produit du panier: */\r\n    deleteText.addEventListener(\"click\", function(e) {\r\n        cartCounter -= Number(productQuantity);\r\n        totalPrice -= Number(productQuantity) * Number(product.price);\r\n        let cartKey = productId + \" \" + productColor;\r\n        cart.removeItem(cartKey);\r\n        document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n        document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n        e.target.closest(\"article\").remove();\r\n    });\r\n}\r\n\r\n/* *** ACTIONS *** */\r\n(async function() {\r\n    /* POUR CHAQUE PRODUIT DU PANIER... */\r\n    for(let i = 0; i < cart.length; i++){\r\n        /* Infos en local storage: */\r\n        var cartKey = localStorage.key(i);\r\n        var splitKey = cartKey.split(\" \");\r\n        productId = splitKey[0];\r\n        productColor = splitKey[1];\r\n        /* Quantité (input): */\r\n        productQuantity = cart.getItem(cartKey);\r\n        /* Màj compteur d'items */\r\n        cartCounter += Number(productQuantity);\r\n\r\n        /* Infos serveur: */\r\n        var product = await getProduct(productId);\r\n        totalPrice += Number(productQuantity) * Number(product.price);\r\n\r\n        /* Génération contenu page au loading: */\r\n        var pageContent = await hydrateDom(product, cartCounter, totalPrice, productQuantity, cartKey);\r\n    }\r\n    \r\n    /* REMPLISSAGE ET VÉRFICATIONS FORMULAIRE */\r\n    /* Accès au formulaire */\r\n    var userForm = document.getElementById(\"cart__order__form\");\r\n    userForm.addEventListener(\"submit\", function (e) {\r\n        checkForm(e);\r\n    });\r\n\r\n})()\r\n\r\n        \r\n\r\n\r\n"]}