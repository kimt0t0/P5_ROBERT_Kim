{"version":3,"sources":["cart.js"],"names":["productId","productColor","productQuantity","productImgUrl","cart","localStorage","cartCounter","totalPrice","firstName","lastName","address","city","email","_classCallCheck","this","Contact","value","orderTab","i","length","cartKey","key","splitKey","split","getItem","console","json","cartProduct","Number","productPrice","log","totalOrderPrice","regeneratorRuntime","async","_context","prev","next","abrupt","fetch","then","httpBodyResponse","product","products","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_id","id","err","_iterator","error","alert","stop","setFormAttributes","inputName","regexModel","min","max","title","_context2","setAttribute","hydrateDom","cartItem","cartItemImg","productImg","cartItemContent","cartItemContentDescr","cartItemContentTitle","cartItemContentColor","cartItemContentPrice","cartItemSettings","settingsQuantity","settingsQuantityText","settingsQuantityInput","deleteContainer","deleteText","_context3","document","createElement","getElementById","appendChild","altTxt","textContent","name","price","e","remove","inputsToTest","regNames","addEventListener","test","errMessage","newContact","createOrderTab","getOrderPrice","contactOrder","orderPrice","_context4","userForm","awrap","getProduct","sent","regAddress","regEmail"],"mappings":"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","file":"cart.min.js","sourcesContent":["/* *** VARIABLES *** */\r\nvar cart = localStorage;\r\n\r\nvar cartCounter = 0;\r\nvar totalPrice = 0;\r\n\r\nvar productId, productColor, productQuantity, productImgUrl;\r\n\r\n/* *** CLASSES *** */\r\n\r\nclass Contact {\r\n    constructor (firstName, lastName, address, city, email) {\r\n        this.firstName = firstName.value;\r\n        this.lastName = lastName.value;\r\n        this.address = address.value;\r\n        this.city = city.value;\r\n        this.email = email.value;\r\n    }\r\n\r\n    getFirstName() {\r\n        return this.firstName;\r\n    }\r\n\r\n    getLastName() {\r\n        return this.lastName;\r\n    }\r\n\r\n    getAddress() {\r\n        return this.address;\r\n    }\r\n\r\n    getCity() {\r\n        return this.city;\r\n    }\r\n\r\n    getEmail() {\r\n        return this.email;\r\n    }\r\n\r\n    createOrderTab() {\r\n        let cartCounter = 0;\r\n        let totalPrice = 0;\r\n        var orderTab = [];\r\n        for(let i = 0; i < cart.length; i++) {\r\n            let cartKey = localStorage.key(i);\r\n            let splitKey = cartKey.split(\" \");\r\n            productId = splitKey[0];\r\n            productColor = splitKey[1];\r\n            productQuantity = cart.getItem(cartKey);\r\n            var cartProduct = [productId, productColor, productQuantity];\r\n            orderTab += cartProduct;\r\n            console.log(orderTab);\r\n            return orderTab;\r\n        }\r\n    }\r\n\r\n    getOrderPrice (orderTab) {\r\n        var totalOrderPrice = 0;\r\n        for (let i = 0; i < orderTab.length; i++) {\r\n            let productId = orderTab[i][1];\r\n            let productQuantity = orderTab[i][3];\r\n            let productPrice = fetch(\"http://localhost:3000/api/products/\" + productId)\r\n                .then(function(httpBodyResponse) {\r\n                    return httpBodyResponse.json();\r\n                })\r\n                .then(function(product) {\r\n                    return product.price;\r\n                });\r\n            totalOrderPrice += Number(productQuantity) * Number(productPrice);\r\n        }\r\n    \r\n        console.log(totalOrderPrice);\r\n    }\r\n}\r\n\r\n/* *** FONCTIONS *** */\r\n\r\n/* GÉNÉRAL */\r\n/* Accès aux infos produit sur serveur */\r\nasync function getProduct(id) {\r\n    return fetch(\"http://localhost:3000/api/products\")\r\n      .then(function(httpBodyResponse) {\r\n        return httpBodyResponse.json();\r\n      })\r\n      .then(function(products) {\r\n          for (product of products) { \r\n              if (product._id == id) {  \r\n                return product;}\r\n          }\r\n      })\r\n      .catch(function(error) {\r\n          alert(error);\r\n      });\r\n}\r\n\r\n/* Attributs du formulaire */\r\nasync function setFormAttributes(inputName, regexModel, min, max, title) {\r\n    inputName.setAttribute(\"pattern\", regexModel);\r\n    inputName.setAttribute(\"min-length\", min);\r\n    inputName.setAttribute(\"max-length\", max);\r\n    inputName.setAttribute(\"title\", title);\r\n}\r\n\r\n\r\n/* *** DOM DYNAMIQUE ***  */\r\nasync function hydrateDom(product, cartCounter, totalPrice, productQuantity, cartKey) {\r\n    /* ÉLÉMENTS A GÉNÉRER ET PLACER POUR AFFICHAGE */\r\n    /* Création balises */\r\n    let cartItem = document.createElement(\"article\");\r\n    let cartItemImg = document.createElement(\"div\");\r\n    let productImg = document.createElement(\"img\");\r\n\r\n    let cartItemContent = document.createElement(\"div\");\r\n    let cartItemContentDescr = document.createElement(\"div\");\r\n    let cartItemContentTitle = document.createElement(\"h2\");\r\n    let cartItemContentColor = document.createElement(\"p\");\r\n    let cartItemContentPrice = document.createElement(\"p\");\r\n\r\n\r\n    let cartItemSettings = document.createElement(\"div\");\r\n\r\n    let settingsQuantity = document.createElement(\"div\");\r\n    let settingsQuantityText = document.createElement(\"p\");\r\n    let settingsQuantityInput = document.createElement(\"input\");\r\n\r\n    let deleteContainer = document.createElement(\"div\");\r\n    let deleteText = document.createElement(\"p\");\r\n\r\n\r\n    /* Position des balises créées */\r\n    document.getElementById(\"cart__items\").appendChild(cartItem);\r\n    cartItem.appendChild(cartItemImg);\r\n    cartItemImg.appendChild(productImg);\r\n\r\n    cartItem.appendChild(cartItemContent);\r\n    cartItemContent.appendChild(cartItemContentDescr);\r\n    cartItemContentDescr.appendChild(cartItemContentTitle);\r\n    cartItemContentDescr.appendChild(cartItemContentColor);\r\n    cartItemContentDescr.appendChild(cartItemContentPrice);\r\n\r\n    cartItemContent.appendChild(cartItemSettings);\r\n\r\n    cartItemSettings.appendChild(settingsQuantity);\r\n    settingsQuantity.appendChild(settingsQuantityText);\r\n    settingsQuantity.appendChild(settingsQuantityInput);\r\n\r\n    cartItemSettings.appendChild(deleteContainer);\r\n    deleteContainer.appendChild(deleteText);\r\n\r\n\r\n    /* Attributs et contenu des balises créées */\r\n    cartItem.setAttribute(\"class\", \"cart__item\");\r\n    cartItem.setAttribute(\"data-id\", productId);\r\n    cartItem.setAttribute(\"data-color\", productColor);\r\n\r\n    cartItemImg.setAttribute(\"class\", \"cart__item__img\")\r\n\r\n    productImg.setAttribute(\"src\", product.imageUrl);\r\n    productImg.setAttribute(\"alt\", product.altTxt);\r\n\r\n\r\n    cartItemContent.setAttribute(\"class\", \"cart__item__content\");\r\n    cartItemContentDescr.setAttribute(\"class\", \"cart__item__content__description\")\r\n    cartItemContentTitle.textContent = product.name;\r\n    cartItemContentColor.textContent = productColor;\r\n    cartItemContentPrice.textContent = Number(product.price) + \" €\";\r\n\r\n    cartItemSettings.setAttribute(\"class\", \"cart__item__content__settings\");\r\n    \r\n    settingsQuantity.setAttribute(\"class\", \"cart__item__content__settings__quantity\");\r\n    settingsQuantityText.textContent = \"Qté : \" + productQuantity;\r\n    settingsQuantityInput.setAttribute(\"type\", \"number\");\r\n    settingsQuantityInput.setAttribute(\"class\", \"itemQuantity\");\r\n    settingsQuantityInput.setAttribute(\"name\", \"itemQuantity\");\r\n    settingsQuantityInput.setAttribute(\"min\", \"1\");\r\n    settingsQuantityInput.setAttribute(\"max\", \"100\");\r\n    settingsQuantityInput.setAttribute(\"value\", productQuantity);\r\n\r\n    deleteContainer.setAttribute(\"class\", \"cart__item__content__settings__delete\");\r\n    deleteText.setAttribute(\"class\", \"deleteItem\");\r\n    deleteText.textContent = \"Supprimer\";\r\n\r\n    /* Attributs et contenus de balises existantes */\r\n    document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n    document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n\r\n        /* MODIFICATIONS DU PANIER */\r\n\r\n    /* /* Modification quantité: */\r\n    settingsQuantityInput.addEventListener(\"change\", function(e) {\r\n        /* (suppression de la quantité originale du produit dans compteur panier et prix total: ) */\r\n        cartCounter -= Number(productQuantity);\r\n        totalPrice -= Number(productQuantity) * Number(product.price);\r\n        /* (màj nouvelle quantité du produit: ) */\r\n        productQuantity = e.target.value;\r\n        settingsQuantityText.textContent = \"Qté : \" + productQuantity;\r\n        /* (màj compteur panier et prix total: ) */\r\n        cartCounter += Number(productQuantity);\r\n        totalPrice += Number(productQuantity) * Number(product.price);\r\n\r\n        document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n        document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n        /* (màj local storage: ) */\r\n        cart[cartKey] = productQuantity;\r\n    });\r\n    \r\n    /* Suppression d'un produit du panier: */\r\n    deleteText.addEventListener(\"click\", function(e) {\r\n        cartCounter -= Number(productQuantity);\r\n        totalPrice -= Number(productQuantity) * Number(product.price);\r\n        let cartKey = productId + \" \" + productColor;\r\n        cart.removeItem(cartKey);\r\n        document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n        document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n        e.target.closest(\"article\").remove();\r\n    });\r\n\r\n    /* REMPLISSAGE ET VÉRFICATIONS FORMULAIRE */\r\n    /* Accès au formulaire */\r\n    let userForm = document.getElementById(\"cart__order__form\");\r\n    userForm.addEventListener(\"submit\", function(e) {\r\n\r\n        // Éléments d'input à check:\r\n        let firstName = document.getElementById(\"firstName\");\r\n        let lastName = document.getElementById(\"lastName\");\r\n        let address = document.getElementById(\"address\");\r\n        let city = document.getElementById(\"city\");\r\n        let email = document.getElementById(\"email\");\r\n\r\n        // Regexs pour check:\r\n        const regNames = /^[a-zA-Z\\s'-]+$/;\r\n        const regAddress = /^[a-zA-Z0-9\\s,'-]*$/; //problème: valide les entrées contenant uniquement des chiffres...\r\n        const regEmail = /^[A-Za-z0-9._%+-]+@([A-Za-z0-9-]+\\.)+([A-Za-z0-9]{2,4})$/;\r\n\r\n         let inputsToTest = [firstName, lastName, address, city, email];\r\n        let regexToTest = [regNames, regNames, regAddress, regNames, regEmail];\r\n\r\n        //Indicateur mauvais remplissage:        \r\n        let error = false;\r\n        \r\n        // Pour chaque élément de la liste d'input...:\r\n        for (let i = 0; i < inputsToTest.length; i++) {\r\n            // Test:\r\n            test = regexToTest[i].test(inputsToTest[i].value);\r\n            // Si test faux ne pas envoyer et message d'erreur:\r\n            if (test == false) {\r\n                errMessage = document.getElementById(inputsToTest[i].name + \"ErrorMsg\");\r\n                errMessage.textContent = \"Ce champ est vide ou n'a pas été complété correctement.\";\r\n                error = true;\r\n            }\r\n        }\r\n        \r\n        if (error == true) {\r\n            e.preventDefault();\r\n            alert(\"Votre commande n'a pas pu être finalisée.\\nVeuillez vérifier que vous avez complété correctement le formulaire.\\n\\nEn cas de problème, n'hésitez pas à contacter notre support\");\r\n        }\r\n        else {\r\n            e.preventDefault();\r\n            console.log(\"Envoi du formulaire...\")\r\n            var newContact = new Contact(firstName, lastName, address, city, email, cart);\r\n            var orderTab = newContact.createOrderTab();\r\n            var orderPrice = newContact.getOrderPrice (orderTab);\r\n            console.log(newContact + \"\\n----> commande: \" + contactOrder + \"\\nPrix total: \" + orderPrice);\r\n        }\r\n    \r\n});\r\n\r\n}\r\n\r\n/* *** ACTIONS *** */\r\n(async function() {\r\n    /* POUR CHAQUE PRODUIT DU PANIER... */\r\n    for(let i = 0; i < cart.length; i++){\r\n        /* Infos en local storage: */\r\n        var cartKey = localStorage.key(i);\r\n        var splitKey = cartKey.split(\" \");\r\n        productId = splitKey[0];\r\n        productColor = splitKey[1];\r\n        /* Quantité (inpupt): */\r\n        productQuantity = cart.getItem(cartKey);\r\n        /* Màj compteur d'items */\r\n        cartCounter += Number(productQuantity);\r\n\r\n        /* Infos serveur: */\r\n        var product = await getProduct(productId);\r\n        totalPrice += Number(productQuantity) * Number(product.price);\r\n\r\n        /* Génération contenu page au loading: */\r\n        var pageContent = await hydrateDom(product, cartCounter, totalPrice, productQuantity, cartKey);\r\n    }\r\n\r\n})()\r\n\r\n        \r\n"]}