{"version":3,"sources":["cart.js"],"names":["productId","productColor","productQuantity","productImgUrl","cart","localStorage","cartCounter","totalPrice","Contact","firstName","lastName","address","city","email","_classCallCheck","this","value","orderGrid","i","length","cartKey","key","splitKey","split","getItem","cartProduct","then","products","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","product","_id","id","err","error","alert","setFormAttributes","inputName","regexModel","min","max","title","regeneratorRuntime","async","_context2","prev","setAttribute","getProduct","stop","e","regNames","inputsToTest","regexToTest","_context3","console","log","document","getElementById","test","name","errMessage","textContent","preventDefault","abrupt","createorderGrid","totalPriceOrder","Number","price","hydrateDom","cartItem","cartItemImg","productImg","cartItemContent","cartItemContentDescr","cartItemContentTitle","cartItemContentColor","cartItemContentPrice","cartItemSettings","settingsQuantity","settingsQuantityText","settingsQuantityInput","deleteContainer","deleteText","_context5","createElement","regAddress","regEmail","appendChild","imageUrl","altTxt","addEventListener","target","removeItem","closest","remove"],"mappings":"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","file":"cart.min.js","sourcesContent":["/* *** VARIABLES *** */\r\nconst cart = localStorage;\r\n\r\nvar cartCounter = 0;\r\nvar totalPrice = 0;\r\n\r\nvar productId, productColor, productQuantity, productImgUrl;\r\n\r\n\r\n\r\n/* *** CLASSES *** */\r\n\r\nclass Contact {\r\n    constructor (firstName, lastName, address, city, email) {\r\n        this.firstName = firstName.value;\r\n        this.lastName = lastName.value;\r\n        this.address = address.value;\r\n        this.city = city.value;\r\n        this.email = email.value;\r\n    }\r\n\r\n    getFirstName() {\r\n        return this.firstName;\r\n    }\r\n\r\n    getLastName() {\r\n        return this.lastName;\r\n    }\r\n\r\n    getAddress() {\r\n        return this.address;\r\n    }\r\n\r\n    getCity() {\r\n        return this.city;\r\n    }\r\n\r\n    getEmail() {\r\n        return this.email;\r\n    }\r\n\r\n    createorderGrid(cart) {\r\n        var orderGrid = [];\r\n        for(let i = 0; i < cart.length; i++) {\r\n            let cartKey = localStorage.key(i);\r\n            let splitKey = cartKey.split(\" \");\r\n            productId = splitKey[0];\r\n            productColor = splitKey[1];\r\n            productQuantity = cart.getItem(cartKey);\r\n            var cartProduct = [productId, productColor, productQuantity];\r\n            orderGrid[i] = cartProduct;\r\n        }\r\n        return orderGrid;\r\n    }\r\n}\r\n\r\n\r\n\r\n/* *** FONCTIONS *** */\r\n\r\n/* GÉNÉRAL */\r\n/* Accès aux infos produit sur serveur */\r\nasync function getProduct(id) {\r\n    return fetch(\"http://localhost:3000/api/products\")\r\n      .then(function(httpBodyResponse) {\r\n        return httpBodyResponse.json();\r\n      })\r\n      .then(function(products) {\r\n          for (product of products) { \r\n              if (product._id == id) {  \r\n                return product;}\r\n          }\r\n      })\r\n      .catch(function(error) {\r\n          alert(error);\r\n      });\r\n}\r\n\r\n/* Attributs du formulaire */\r\nasync function setFormAttributes(inputName, regexModel, min, max, title) {\r\n    inputName.setAttribute(\"pattern\", regexModel);\r\n    inputName.setAttribute(\"min-length\", min);\r\n    inputName.setAttribute(\"max-length\", max);\r\n    inputName.setAttribute(\"title\", title);\r\n}\r\n\r\n/* FORMULAIRE */\r\n/* Vérification et création objet contact + tableau produits */\r\nasync function checkForm(e) {\r\n    console.log(\"test appel fonction\");\r\n\r\n    // Éléments d'input à check:\r\n    let firstName = document.getElementById(\"firstName\");\r\n    let lastName = document.getElementById(\"lastName\");\r\n    let address = document.getElementById(\"address\");\r\n    let city = document.getElementById(\"city\");\r\n    let email = document.getElementById(\"email\");\r\n\r\n    // Regexs pour check:\r\n    const regNames = /^[a-zA-Z\\s'-]+$/;\r\n    const regAddress = /^[a-zA-Z0-9\\s,'-]*$/; //problème: valide les entrées contenant uniquement des chiffres...\r\n    const regEmail = /^[A-Za-z0-9._%+-]+@([A-Za-z0-9-]+\\.)+([A-Za-z0-9]{2,4})$/;\r\n\r\n    let inputsToTest = [firstName, lastName, address, city, email];\r\n    let regexToTest = [regNames, regNames, regAddress, regNames, regEmail];\r\n\r\n    //Indicateur mauvais remplissage:        \r\n    let error = false;\r\n    \r\n    // Pour chaque élément de la liste d'input...:\r\n    for (let i = 0; i < inputsToTest.length; i++) {\r\n        console.log(\"test appel boucle \" + i);\r\n        // Test:\r\n        test = regexToTest[i].test(inputsToTest[i].value);\r\n        // Si test faux ne pas envoyer et message d'erreur:\r\n        if (test == false) {\r\n            errMessage = document.getElementById(inputsToTest[i].name + \"ErrorMsg\");\r\n            errMessage.textContent = \"Ce champ est vide ou n'a pas été complété correctement.\";\r\n            error = true;\r\n        }\r\n    }\r\n    \r\n    if (error == true) {\r\n        e.preventDefault();\r\n        return alert(\"Votre commande n'a pas pu être finalisée.\\nVeuillez vérifier que vous avez complété correctement le formulaire.\\n\\nEn cas de problème, n'hésitez pas à contacter notre support\");\r\n    }\r\n    else {\r\n        e.preventDefault();\r\n        console.log(\"Envoi du formulaire...\")\r\n\r\n        Contact = new Contact(firstName, lastName, address, city, email);\r\n        orderGrid = Contact.createorderGrid(cart);\r\n    }\r\n\r\n}\r\n\r\n/* Calcul du total final pour envoi */\r\nasync function getFinalTotal (orderGrid) {\r\n    let totalPriceOrder = 0;\r\n    for (let i = 0; i < orderGrid.length; i++) {\r\n        productId = orderGrid[i][0];\r\n        let product = await getProduct(productId);\r\n        totalPriceOrder += Number(orderGrid[i][2]) * Number(product.price);\r\n    }\r\n    return totalPriceOrder;\r\n}\r\n\r\n\r\n\r\n/* *** DOM DYNAMIQUE ***  */\r\nasync function hydrateDom(product, cartCounter, totalPrice, productQuantity, cartKey) {\r\n    /* ÉLÉMENTS A GÉNÉRER ET PLACER POUR AFFICHAGE */\r\n    /* Création balises */\r\n    let cartItem = document.createElement(\"article\");\r\n    let cartItemImg = document.createElement(\"div\");\r\n    let productImg = document.createElement(\"img\");\r\n\r\n    let cartItemContent = document.createElement(\"div\");\r\n    let cartItemContentDescr = document.createElement(\"div\");\r\n    let cartItemContentTitle = document.createElement(\"h2\");\r\n    let cartItemContentColor = document.createElement(\"p\");\r\n    let cartItemContentPrice = document.createElement(\"p\");\r\n\r\n\r\n    let cartItemSettings = document.createElement(\"div\");\r\n\r\n    let settingsQuantity = document.createElement(\"div\");\r\n    let settingsQuantityText = document.createElement(\"p\");\r\n    let settingsQuantityInput = document.createElement(\"input\");\r\n\r\n    let deleteContainer = document.createElement(\"div\");\r\n    let deleteText = document.createElement(\"p\");\r\n\r\n\r\n    /* Position des balises créées */\r\n    document.getElementById(\"cart__items\").appendChild(cartItem);\r\n    cartItem.appendChild(cartItemImg);\r\n    cartItemImg.appendChild(productImg);\r\n\r\n    cartItem.appendChild(cartItemContent);\r\n    cartItemContent.appendChild(cartItemContentDescr);\r\n    cartItemContentDescr.appendChild(cartItemContentTitle);\r\n    cartItemContentDescr.appendChild(cartItemContentColor);\r\n    cartItemContentDescr.appendChild(cartItemContentPrice);\r\n\r\n    cartItemContent.appendChild(cartItemSettings);\r\n\r\n    cartItemSettings.appendChild(settingsQuantity);\r\n    settingsQuantity.appendChild(settingsQuantityText);\r\n    settingsQuantity.appendChild(settingsQuantityInput);\r\n\r\n    cartItemSettings.appendChild(deleteContainer);\r\n    deleteContainer.appendChild(deleteText);\r\n\r\n\r\n    /* Attributs et contenu des balises créées */\r\n    cartItem.setAttribute(\"class\", \"cart__item\");\r\n    cartItem.setAttribute(\"data-id\", productId);\r\n    cartItem.setAttribute(\"data-color\", productColor);\r\n\r\n    cartItemImg.setAttribute(\"class\", \"cart__item__img\")\r\n\r\n    productImg.setAttribute(\"src\", product.imageUrl);\r\n    productImg.setAttribute(\"alt\", product.altTxt);\r\n\r\n\r\n    cartItemContent.setAttribute(\"class\", \"cart__item__content\");\r\n    cartItemContentDescr.setAttribute(\"class\", \"cart__item__content__description\")\r\n    cartItemContentTitle.textContent = product.name;\r\n    cartItemContentColor.textContent = productColor;\r\n    cartItemContentPrice.textContent = Number(product.price) + \" €\";\r\n\r\n    cartItemSettings.setAttribute(\"class\", \"cart__item__content__settings\");\r\n    \r\n    settingsQuantity.setAttribute(\"class\", \"cart__item__content__settings__quantity\");\r\n    settingsQuantityText.textContent = \"Qté : \" + productQuantity;\r\n    settingsQuantityInput.setAttribute(\"type\", \"number\");\r\n    settingsQuantityInput.setAttribute(\"class\", \"itemQuantity\");\r\n    settingsQuantityInput.setAttribute(\"name\", \"itemQuantity\");\r\n    settingsQuantityInput.setAttribute(\"min\", \"1\");\r\n    settingsQuantityInput.setAttribute(\"max\", \"100\");\r\n    settingsQuantityInput.setAttribute(\"value\", productQuantity);\r\n\r\n    deleteContainer.setAttribute(\"class\", \"cart__item__content__settings__delete\");\r\n    deleteText.setAttribute(\"class\", \"deleteItem\");\r\n    deleteText.textContent = \"Supprimer\";\r\n\r\n    /* Attributs et contenus de balises existantes */\r\n    document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n    document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n\r\n        /* MODIFICATIONS DU PANIER */\r\n\r\n    /* /* Modification quantité: */\r\n    settingsQuantityInput.addEventListener(\"change\", function(e) {\r\n        /* (suppression de la quantité originale du produit dans compteur panier et prix total: ) */\r\n        cartCounter -= Number(productQuantity);\r\n        totalPrice -= Number(productQuantity) * Number(product.price);\r\n        /* (màj nouvelle quantité du produit: ) */\r\n        productQuantity = e.target.value;\r\n        settingsQuantityText.textContent = \"Qté : \" + productQuantity;\r\n        /* (màj compteur panier et prix total: ) */\r\n        cartCounter += Number(productQuantity);\r\n        totalPrice += Number(productQuantity) * Number(product.price);\r\n\r\n        document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n        document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n        /* (màj local storage: ) */\r\n        cart[cartKey] = productQuantity;\r\n    });\r\n    \r\n    /* Suppression d'un produit du panier: */\r\n    deleteText.addEventListener(\"click\", function(e) {\r\n        cartCounter -= Number(productQuantity);\r\n        totalPrice -= Number(productQuantity) * Number(product.price);\r\n        let cartKey = productId + \" \" + productColor;\r\n        cart.removeItem(cartKey);\r\n        document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n        document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n        e.target.closest(\"article\").remove();\r\n    });\r\n}\r\n\r\n/* *** ACTIONS *** */\r\n(async function() {\r\n    /* POUR CHAQUE PRODUIT DU PANIER... */\r\n    for(let i = 0; i < cart.length; i++){\r\n        /* Infos en local storage: */\r\n        var cartKey = localStorage.key(i);\r\n        var splitKey = cartKey.split(\" \");\r\n        productId = splitKey[0];\r\n        productColor = splitKey[1];\r\n        /* Quantité (input): */\r\n        productQuantity = cart.getItem(cartKey);\r\n        /* Màj compteur d'items */\r\n        cartCounter += Number(productQuantity);\r\n\r\n        /* Infos serveur: */\r\n        var product = await getProduct(productId);\r\n        totalPrice += Number(productQuantity) * Number(product.price);\r\n\r\n        /* Génération contenu page au loading: */\r\n        var pageContent = await hydrateDom(product, cartCounter, totalPrice, productQuantity, cartKey);\r\n    }\r\n    \r\n    /* REMPLISSAGE ET VÉRFICATIONS FORMULAIRE */\r\n    /* Accès au formulaire */\r\n    var userForm = document.getElementById(\"cart__order__form\");\r\n    userForm.addEventListener(\"submit\", function (e) {\r\n        checkForm(e);\r\n    });\r\n\r\n})()\r\n\r\n        \r\n\r\n\r\n"]}