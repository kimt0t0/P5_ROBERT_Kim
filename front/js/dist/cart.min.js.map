{"version":3,"sources":["cart.js"],"names":["productId","productColor","productQuantity","productImgUrl","cart","localStorage","cartCounter","getProduct","id","regeneratorRuntime","async","_context","prev","next","abrupt","fetch","then","httpBodyResponse","json","products","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","product","_id","err","error","alert","stop","setFormAttributes","inputName","regexModel","min","max","title","_context2","setAttribute","hydrateDom","totalPrice","cartKey","cartItem","cartItemImg","productImg","cartItemContent","cartItemContentDescr","cartItemContentTitle","cartItemContentColor","cartItemContentPrice","cartItemSettings","settingsQuantity","settingsQuantityText","settingsQuantityInput","deleteContainer","deleteText","_context3","document","createElement","getElementById","appendChild","price","textContent","e","Number","imageUrl","removeItem","remove","addEventListener","inputsToTest","target","regexToTest","regNames","length","i","log","closest","name","test","errMessage","preventDefault","firstName","console","email","splitKey","_context4","key","split","awrap","sent"],"mappings":"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","file":"cart.min.js","sourcesContent":["/* *** VARIABLES *** */\r\nvar cart = localStorage;\r\n\r\nvar cartCounter = 0;\r\nvar totalPrice = 0;\r\n\r\nvar productId, productColor, productQuantity, productImgUrl;\r\n\r\n\r\n/* *** FONCTIONS *** */\r\n\r\n/* GÉNÉRAL */\r\n/* Accès aux infos produit sur serveur */\r\nasync function getProduct(id) {\r\n    return fetch(\"http://localhost:3000/api/products\")\r\n      .then(function(httpBodyResponse) {\r\n        return httpBodyResponse.json();\r\n      })\r\n      .then(function(products) {\r\n          for (product of products) { \r\n              if (product._id == id) {  \r\n                return product;}\r\n          }\r\n      })\r\n      .catch(function(error) {\r\n          alert(error);\r\n      });\r\n}\r\n\r\n/* Attributs du formulaire */\r\nasync function setFormAttributes(inputName, regexModel, min, max, title) {\r\n    inputName.setAttribute(\"pattern\", regexModel);\r\n    inputName.setAttribute(\"min-length\", min);\r\n    inputName.setAttribute(\"max-length\", max);\r\n    inputName.setAttribute(\"title\", title);\r\n}\r\n\r\n\r\n/* *** DOM DYNAMIQUE ***  */\r\nasync function hydrateDom(product, cartCounter, totalPrice, productQuantity, cartKey) {\r\n    /* ÉLÉMENTS A GÉNÉRER ET PLACER POUR AFFICHAGE */\r\n    /* Création balises */\r\n    let cartItem = document.createElement(\"article\");\r\n    let cartItemImg = document.createElement(\"div\");\r\n    let productImg = document.createElement(\"img\");\r\n\r\n    let cartItemContent = document.createElement(\"div\");\r\n    let cartItemContentDescr = document.createElement(\"div\");\r\n    let cartItemContentTitle = document.createElement(\"h2\");\r\n    let cartItemContentColor = document.createElement(\"p\");\r\n    let cartItemContentPrice = document.createElement(\"p\");\r\n\r\n\r\n    let cartItemSettings = document.createElement(\"div\");\r\n\r\n    let settingsQuantity = document.createElement(\"div\");\r\n    let settingsQuantityText = document.createElement(\"p\");\r\n    let settingsQuantityInput = document.createElement(\"input\");\r\n\r\n    let deleteContainer = document.createElement(\"div\");\r\n    let deleteText = document.createElement(\"p\");\r\n\r\n\r\n    /* Position des balises créées */\r\n    document.getElementById(\"cart__items\").appendChild(cartItem);\r\n    cartItem.appendChild(cartItemImg);\r\n    cartItemImg.appendChild(productImg);\r\n\r\n    cartItem.appendChild(cartItemContent);\r\n    cartItemContent.appendChild(cartItemContentDescr);\r\n    cartItemContentDescr.appendChild(cartItemContentTitle);\r\n    cartItemContentDescr.appendChild(cartItemContentColor);\r\n    cartItemContentDescr.appendChild(cartItemContentPrice);\r\n\r\n    cartItemContent.appendChild(cartItemSettings);\r\n\r\n    cartItemSettings.appendChild(settingsQuantity);\r\n    settingsQuantity.appendChild(settingsQuantityText);\r\n    settingsQuantity.appendChild(settingsQuantityInput);\r\n\r\n    cartItemSettings.appendChild(deleteContainer);\r\n    deleteContainer.appendChild(deleteText);\r\n\r\n\r\n    /* Attributs et contenu des balises créées */\r\n    cartItem.setAttribute(\"class\", \"cart__item\");\r\n    cartItem.setAttribute(\"data-id\", productId);\r\n    cartItem.setAttribute(\"data-color\", productColor);\r\n\r\n    cartItemImg.setAttribute(\"class\", \"cart__item__img\")\r\n\r\n    productImg.setAttribute(\"src\", product.imageUrl);\r\n    productImg.setAttribute(\"alt\", product.altTxt);\r\n\r\n\r\n    cartItemContent.setAttribute(\"class\", \"cart__item__content\");\r\n    cartItemContentDescr.setAttribute(\"class\", \"cart__item__content__description\")\r\n    cartItemContentTitle.textContent = product.name;\r\n    cartItemContentColor.textContent = productColor;\r\n    cartItemContentPrice.textContent = Number(product.price) + \" €\";\r\n\r\n    cartItemSettings.setAttribute(\"class\", \"cart__item__content__settings\");\r\n    \r\n    settingsQuantity.setAttribute(\"class\", \"cart__item__content__settings__quantity\");\r\n    settingsQuantityText.textContent = \"Qté : \" + productQuantity;\r\n    settingsQuantityInput.setAttribute(\"type\", \"number\");\r\n    settingsQuantityInput.setAttribute(\"class\", \"itemQuantity\");\r\n    settingsQuantityInput.setAttribute(\"name\", \"itemQuantity\");\r\n    settingsQuantityInput.setAttribute(\"min\", \"1\");\r\n    settingsQuantityInput.setAttribute(\"max\", \"100\");\r\n    settingsQuantityInput.setAttribute(\"value\", productQuantity);\r\n\r\n    deleteContainer.setAttribute(\"class\", \"cart__item__content__settings__delete\");\r\n    deleteText.setAttribute(\"class\", \"deleteItem\");\r\n    deleteText.textContent = \"Supprimer\";\r\n\r\n    /* Attributs et contenus de balises existantes */\r\n    document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n    document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n\r\n        /* MODIFICATIONS DU PANIER */\r\n\r\n    /* /* Modification quantité: */\r\n    settingsQuantityInput.addEventListener(\"change\", function(e) {\r\n        /* (suppression de la quantité originale du produit dans compteur panier et prix total: ) */\r\n        cartCounter -= Number(productQuantity);\r\n        totalPrice -= Number(productQuantity) * Number(product.price);\r\n        /* (màj nouvelle quantité du produit: ) */\r\n        productQuantity = e.target.value;\r\n        settingsQuantityText.textContent = \"Qté : \" + productQuantity;\r\n        /* (màj compteur panier et prix total: ) */\r\n        cartCounter += Number(productQuantity);\r\n        totalPrice += Number(productQuantity) * Number(product.price);\r\n\r\n        document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n        document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n        /* (màj local storage: ) */\r\n        cart[cartKey] = productQuantity;\r\n    });\r\n    \r\n    /* Suppression d'un produit du panier: */\r\n    deleteText.addEventListener(\"click\", function(e) {\r\n        cartCounter -= Number(productQuantity);\r\n        totalPrice -= Number(productQuantity) * Number(product.price);\r\n        let cartKey = productId + \" \" + productColor;\r\n        cart.removeItem(cartKey);\r\n        document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n        document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n        e.target.closest(\"article\").remove();\r\n    });\r\n\r\n    /* REMPLISSAGE ET VÉRFICATIONS FORMULAIRE */\r\n    /* Accès au formulaire */\r\n    let userForm = document.getElementById(\"cart__order__form\");\r\n    userForm.addEventListener(\"submit\", function(e) {\r\n        // Ne pas envoyer directement pour check avant:\r\n        e.preventDefault();\r\n\r\n        // Éléments d'input à check:\r\n        let firstName = document.getElementById(\"firstName\");\r\n        let lastName = document.getElementById(\"lastName\");\r\n        let address = document.getElementById(\"address\");\r\n        let city = document.getElementById(\"city\");\r\n        let email = document.getElementById(\"email\");\r\n\r\n        // Regexs pour check:\r\n        const regNames = /^[a-zA-Z\\s'-]+$/;\r\n        const regAddress = /^[a-zA-Z0-9\\s,'-]*$/;\r\n        const regEmail = /^[A-Za-z0-9._%+-]+@([A-Za-z0-9-]+\\.)+([A-Za-z0-9]{2,4})$/;\r\n\r\n        let inputsToTest = [firstName, lastName, address, city, email];\r\n        let regexToTest = [regNames, regNames, regAddress, regNames, regEmail];\r\n\r\n        //Indicateur mauvais remplissage:        \r\n        let error = false;\r\n        \r\n        // Pour chaque élément de la liste d'input...:\r\n        for (let i = 0; inputsToTest.length - 1; i++) {\r\n            // Test:\r\n            test = regexToTest[i].test(inputsToTest[i].value);\r\n            console.log(\"Test de l'input \" + inputsToTest[i].name + \" avec la regex: \" + regexToTest[i] + \" -----> \" + test);\r\n            // Si test faux ne pas envoyer et message d'erreur:\r\n            if (test == false) {\r\n                errMessage = document.getElementById(inputsToTest[i].name + \"ErrorMsg\");\r\n                errMessage.textContent = \"Ce champ est vide ou n'a pas été complété correctement.\";\r\n                error = true;\r\n            }\r\n        }\r\n        \r\n        if (error == true) {\r\n            e.preventDefault();\r\n            alert(\"Votre commande n'a pas pu être finalisée.\\nVeuillez vérifier que vous avez complété correctement le formulaire.\\n\\nEn cas de problème, n'hésitez pas à contacter notre support\");\r\n        }\r\n        else {\r\n            e.preventDefault();\r\n            console.log(\"Envoi du formulaire...\")\r\n        }\r\n    \r\n});\r\n\r\n}\r\n\r\n/* *** ACTIONS *** */\r\n(async function() {\r\n    /* POUR CHAQUE PRODUIT DU PANIER... */\r\n    for(let i = 0; i < cart.length; i++){\r\n        /* Infos en local storage: */\r\n        var cartKey = localStorage.key(i);\r\n        var splitKey = cartKey.split(\" \");\r\n        productId = splitKey[0];\r\n        productColor = splitKey[1];\r\n        /* Quantité (inpupt): */\r\n        productQuantity = cart.getItem(cartKey);\r\n        /* Màj compteur d'items */\r\n        cartCounter += Number(productQuantity);\r\n\r\n        /* Infos serveur: */\r\n        var product = await getProduct(productId);\r\n        totalPrice += Number(productQuantity) * Number(product.price);\r\n\r\n        /* Génération contenu page au loading: */\r\n        var pageContent = await hydrateDom(product, cartCounter, totalPrice, productQuantity, cartKey);\r\n    }\r\n\r\n})()\r\n\r\n        \r\n"]}