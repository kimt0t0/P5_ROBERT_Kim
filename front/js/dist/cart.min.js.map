{"version":3,"sources":["cart.js"],"names":["productId","productColor","productQuantity","productImgUrl","cart","localStorage","cartCounter","totalPrice","Contact","firstName","lastName","address","city","email","_classCallCheck","this","value","orderGrid","i","length","cartKey","key","splitKey","split","getItem","cartProduct","then","products","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","product","_id","id","err","error","alert","setFormAttributes","inputName","regexModel","min","max","title","regeneratorRuntime","async","_context2","prev","setAttribute","getProduct","stop","checkForm","e","regNames","inputsToTest","regexToTest","totalPriceOrder","finalOrder","_context3","document","getElementById","test","errMessage","name","textContent","preventDefault","abrupt","console","log","awrap","getFinalTotal","sent","_product","_context4","Number","price","postOrder","data","_context5","fetch","method","stringify","Content-type","response","json","regAddress","regEmail","hydrateDom","cartItem","cartItemImg","productImg","cartItemContent","cartItemContentDescr","cartItemContentTitle","cartItemContentColor","cartItemContentPrice","cartItemSettings","settingsQuantity","settingsQuantityText","settingsQuantityInput","deleteContainer","deleteText","_context6","createElement","appendChild","imageUrl","altTxt","addEventListener","target","headers","removeItem","closest","remove","_context7"],"mappings":"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","file":"cart.min.js","sourcesContent":["/* *** VARIABLES *** */\r\nconst cart = localStorage;\r\n\r\nvar cartCounter = 0;\r\nvar totalPrice = 0;\r\n\r\nvar productId, productColor, productQuantity, productImgUrl;\r\n\r\n\r\n\r\n/* *** CLASSES *** */\r\n\r\nclass Contact {\r\n    constructor (firstName, lastName, address, city, email) {\r\n        this.firstName = firstName.value;\r\n        this.lastName = lastName.value;\r\n        this.address = address.value;\r\n        this.city = city.value;\r\n        this.email = email.value;\r\n    }\r\n\r\n    getFirstName() {\r\n        return this.firstName;\r\n    }\r\n\r\n    getLastName() {\r\n        return this.lastName;\r\n    }\r\n\r\n    getAddress() {\r\n        return this.address;\r\n    }\r\n\r\n    getCity() {\r\n        return this.city;\r\n    }\r\n\r\n    getEmail() {\r\n        return this.email;\r\n    }\r\n\r\n    createorderGrid(cart) {\r\n        var orderGrid = [];\r\n        for(let i = 0; i < cart.length; i++) {\r\n            let cartKey = localStorage.key(i);\r\n            let splitKey = cartKey.split(\" \");\r\n            productId = splitKey[0];\r\n            productColor = splitKey[1];\r\n            productQuantity = cart.getItem(cartKey);\r\n            var cartProduct = [productId, productColor, productQuantity];\r\n            orderGrid[i] = cartProduct;\r\n        }\r\n        return orderGrid;\r\n    }\r\n}\r\n\r\n\r\n\r\n/* *** FONCTIONS *** */\r\n\r\n/* GÉNÉRAL */\r\n/* Accès aux infos produit sur serveur */\r\nasync function getProduct(id) {\r\n    return fetch(\"http://localhost:3000/api/products\")\r\n      .then(function(httpBodyResponse) {\r\n        return httpBodyResponse.json();\r\n      })\r\n      .then(function(products) {\r\n          for (product of products) { \r\n              if (product._id == id) {  \r\n                return product;}\r\n          }\r\n      })\r\n      .catch(function(error) {\r\n          alert(error);\r\n      });\r\n}\r\n\r\n/* Attributs du formulaire */\r\nasync function setFormAttributes(inputName, regexModel, min, max, title) {\r\n    inputName.setAttribute(\"pattern\", regexModel);\r\n    inputName.setAttribute(\"min-length\", min);\r\n    inputName.setAttribute(\"max-length\", max);\r\n    inputName.setAttribute(\"title\", title);\r\n}\r\n\r\n/* FORMULAIRE */\r\n\r\n/* Vérification et création objet contact + tableau produits */\r\nasync function checkForm(e) {\r\n\r\n    // Éléments d'input à check:\r\n    let firstName = document.getElementById(\"firstName\");\r\n    let lastName = document.getElementById(\"lastName\");\r\n    let address = document.getElementById(\"address\");\r\n    let city = document.getElementById(\"city\");\r\n    let email = document.getElementById(\"email\");\r\n\r\n    // Regexs pour check:\r\n    const regNames = /^[a-zA-Z\\s'-]+$/;\r\n    const regAddress = /^[a-zA-Z0-9\\s,'-]*$/; //problème: valide les entrées contenant uniquement des chiffres...\r\n    const regEmail = /^[A-Za-z0-9._%+-]+@([A-Za-z0-9-]+\\.)+([A-Za-z0-9]{2,4})$/;\r\n\r\n    let inputsToTest = [firstName, lastName, address, city, email];\r\n    let regexToTest = [regNames, regNames, regAddress, regNames, regEmail];\r\n\r\n    //Indicateur mauvais remplissage:        \r\n    let error = false;\r\n    \r\n    // Pour chaque élément de la liste d'input...:\r\n    for (let i = 0; i < inputsToTest.length; i++) {\r\n        // Test:\r\n        test = regexToTest[i].test(inputsToTest[i].value);\r\n        // Si test faux ne pas envoyer et message d'erreur:\r\n        if (test == false) {\r\n            errMessage = document.getElementById(inputsToTest[i].name + \"ErrorMsg\");\r\n            errMessage.textContent = \"Ce champ est vide ou n'a pas été complété correctement.\";\r\n            error = true;\r\n        }\r\n    }\r\n    \r\n    if (error == true) {\r\n        e.preventDefault();\r\n        return alert(\"Votre commande n'a pas pu être finalisée.\\nVeuillez vérifier que vous avez complété correctement le formulaire.\\n\\nEn cas de problème, n'hésitez pas à contacter notre support\");\r\n    }\r\n    else {\r\n        e.preventDefault();\r\n        console.log(\"Envoi du formulaire...\")\r\n        Contact = new Contact(firstName, lastName, address, city, email);\r\n        orderGrid = Contact.createorderGrid(cart); \r\n        console.log(orderGrid);\r\n        let totalPriceOrder = await getFinalTotal(orderGrid);\r\n        console.log(totalPriceOrder);\r\n        let finalOrder = {\r\n            \"products\": orderGrid, \r\n            \"total\": totalPriceOrder\r\n        };\r\n        console.log(finalOrder);\r\n        // postOrder(finalOrder);\r\n    }\r\n\r\n}\r\n\r\n/* Calcul du total final pour envoi */\r\nasync function getFinalTotal (orderGrid) {\r\n    let totalPriceOrder = 0;\r\n    for (let i = 0; i < orderGrid.length; i++) {\r\n        productId = orderGrid[i][0];\r\n        let product = await getProduct(productId);\r\n        totalPriceOrder += Number(orderGrid[i][2]) * Number(product.price);\r\n    }\r\n    return totalPriceOrder;\r\n}\r\n\r\n/* Envoi commande */\r\nasync function postOrder(data) {\r\n    fetch(\"http://localhost:3000/api/products/order\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify(data),\r\n        headers: {\"Content-type\": \"application/json;charset=UTF-8\"}\r\n    })\r\n    .then(function(response) {\r\n        return response.json();\r\n    })\r\n    .then(function(json) {\r\n        console.log(json);\r\n    })\r\n    .catch(err => console.log(err));\r\n}\r\n\r\n\r\n/* *** DOM DYNAMIQUE ***  */\r\nasync function hydrateDom(product, cartCounter, totalPrice, productQuantity, cartKey) {\r\n    /* ÉLÉMENTS A GÉNÉRER ET PLACER POUR AFFICHAGE */\r\n    /* Création balises */\r\n    let cartItem = document.createElement(\"article\");\r\n    let cartItemImg = document.createElement(\"div\");\r\n    let productImg = document.createElement(\"img\");\r\n\r\n    let cartItemContent = document.createElement(\"div\");\r\n    let cartItemContentDescr = document.createElement(\"div\");\r\n    let cartItemContentTitle = document.createElement(\"h2\");\r\n    let cartItemContentColor = document.createElement(\"p\");\r\n    let cartItemContentPrice = document.createElement(\"p\");\r\n\r\n\r\n    let cartItemSettings = document.createElement(\"div\");\r\n\r\n    let settingsQuantity = document.createElement(\"div\");\r\n    let settingsQuantityText = document.createElement(\"p\");\r\n    let settingsQuantityInput = document.createElement(\"input\");\r\n\r\n    let deleteContainer = document.createElement(\"div\");\r\n    let deleteText = document.createElement(\"p\");\r\n\r\n\r\n    /* Position des balises créées */\r\n    document.getElementById(\"cart__items\").appendChild(cartItem);\r\n    cartItem.appendChild(cartItemImg);\r\n    cartItemImg.appendChild(productImg);\r\n\r\n    cartItem.appendChild(cartItemContent);\r\n    cartItemContent.appendChild(cartItemContentDescr);\r\n    cartItemContentDescr.appendChild(cartItemContentTitle);\r\n    cartItemContentDescr.appendChild(cartItemContentColor);\r\n    cartItemContentDescr.appendChild(cartItemContentPrice);\r\n\r\n    cartItemContent.appendChild(cartItemSettings);\r\n\r\n    cartItemSettings.appendChild(settingsQuantity);\r\n    settingsQuantity.appendChild(settingsQuantityText);\r\n    settingsQuantity.appendChild(settingsQuantityInput);\r\n\r\n    cartItemSettings.appendChild(deleteContainer);\r\n    deleteContainer.appendChild(deleteText);\r\n\r\n\r\n    /* Attributs et contenu des balises créées */\r\n    cartItem.setAttribute(\"class\", \"cart__item\");\r\n    cartItem.setAttribute(\"data-id\", productId);\r\n    cartItem.setAttribute(\"data-color\", productColor);\r\n\r\n    cartItemImg.setAttribute(\"class\", \"cart__item__img\")\r\n\r\n    productImg.setAttribute(\"src\", product.imageUrl);\r\n    productImg.setAttribute(\"alt\", product.altTxt);\r\n\r\n\r\n    cartItemContent.setAttribute(\"class\", \"cart__item__content\");\r\n    cartItemContentDescr.setAttribute(\"class\", \"cart__item__content__description\")\r\n    cartItemContentTitle.textContent = product.name;\r\n    cartItemContentColor.textContent = productColor;\r\n    cartItemContentPrice.textContent = Number(product.price) + \" €\";\r\n\r\n    cartItemSettings.setAttribute(\"class\", \"cart__item__content__settings\");\r\n    \r\n    settingsQuantity.setAttribute(\"class\", \"cart__item__content__settings__quantity\");\r\n    settingsQuantityText.textContent = \"Qté : \" + productQuantity;\r\n    settingsQuantityInput.setAttribute(\"type\", \"number\");\r\n    settingsQuantityInput.setAttribute(\"class\", \"itemQuantity\");\r\n    settingsQuantityInput.setAttribute(\"name\", \"itemQuantity\");\r\n    settingsQuantityInput.setAttribute(\"min\", \"1\");\r\n    settingsQuantityInput.setAttribute(\"max\", \"100\");\r\n    settingsQuantityInput.setAttribute(\"value\", productQuantity);\r\n\r\n    deleteContainer.setAttribute(\"class\", \"cart__item__content__settings__delete\");\r\n    deleteText.setAttribute(\"class\", \"deleteItem\");\r\n    deleteText.textContent = \"Supprimer\";\r\n\r\n    /* Attributs et contenus de balises existantes */\r\n    document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n    document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n\r\n        /* MODIFICATIONS DU PANIER */\r\n\r\n    /* /* Modification quantité: */\r\n    settingsQuantityInput.addEventListener(\"change\", function(e) {\r\n        /* (suppression de la quantité originale du produit dans compteur panier et prix total: ) */\r\n        cartCounter -= Number(productQuantity);\r\n        totalPrice -= Number(productQuantity) * Number(product.price);\r\n        /* (màj nouvelle quantité du produit: ) */\r\n        productQuantity = e.target.value;\r\n        settingsQuantityText.textContent = \"Qté : \" + productQuantity;\r\n        /* (màj compteur panier et prix total: ) */\r\n        cartCounter += Number(productQuantity);\r\n        totalPrice += Number(productQuantity) * Number(product.price);\r\n\r\n        document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n        document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n        /* (màj local storage: ) */\r\n        cart[cartKey] = productQuantity;\r\n    });\r\n    \r\n    /* Suppression d'un produit du panier: */\r\n    deleteText.addEventListener(\"click\", function(e) {\r\n        cartCounter -= Number(productQuantity);\r\n        totalPrice -= Number(productQuantity) * Number(product.price);\r\n        let cartKey = productId + \" \" + productColor;\r\n        cart.removeItem(cartKey);\r\n        document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n        document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n        e.target.closest(\"article\").remove();\r\n    });\r\n}\r\n\r\n/* *** ACTIONS *** */\r\n(async function() {\r\n    /* POUR CHAQUE PRODUIT DU PANIER... */\r\n    for(let i = 0; i < cart.length; i++){\r\n        /* Infos en local storage: */\r\n        var cartKey = localStorage.key(i);\r\n        var splitKey = cartKey.split(\" \");\r\n        productId = splitKey[0];\r\n        productColor = splitKey[1];\r\n        /* Quantité (input): */\r\n        productQuantity = cart.getItem(cartKey);\r\n        /* Màj compteur d'items */\r\n        cartCounter += Number(productQuantity);\r\n\r\n        /* Infos serveur: */\r\n        var product = await getProduct(productId);\r\n        totalPrice += Number(productQuantity) * Number(product.price);\r\n\r\n        /* Génération contenu page au loading: */\r\n        var pageContent = await hydrateDom(product, cartCounter, totalPrice, productQuantity, cartKey);\r\n    }\r\n    \r\n    /* REMPLISSAGE ET VÉRFICATIONS FORMULAIRE */\r\n    /* Accès au formulaire */\r\n    var userForm = document.getElementById(\"cart__order__form\");\r\n    userForm.addEventListener(\"submit\", function (e) {\r\n        checkForm(e);\r\n    });\r\n\r\n})()\r\n\r\n        \r\n\r\n\r\n"]}