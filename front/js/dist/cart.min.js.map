{"version":3,"sources":["cart.js"],"names":["cartCounter","productColor","productQuantity","cart","localStorage","totalPrice","Contact","firstName","lastName","address","_classCallCheck","this","value","getProduct","id","regeneratorRuntime","async","_context","prev","next","abrupt","then","httpBodyResponse","json","products","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","product","err","error","alert","stop","updateCartCounter","i","length","key","Number","checkForm","regNames","inputsToTest","document","getElementById","regexsToTest","inp","test","globalTest","name","textContent","productsTable","_i2","cartKey","splitKey","_context2","reg","split","includes","productId","createData","orderData","_context3","city","awrap","createTable","sent","contact","data","_context4","fetch","method","redirect","headers","Content-type","body","response","clear","window","location","orderId","cartItem","createElement","cartItemImg","productImg","cartItemContent","cartItemContentDescr","cartItemContentTitle","cartItemContentColor","cartItemContentPrice","cartItemSettings","settingsQuantity","settingsQuantityText","settingsQuantityInput","deleteContainer","deleteText","appendChild","setAttribute","imageUrl","altTxt","price","stringify","addEventListener","e","target","closest","getAttribute","initialQuantity","isInteger","parseInt","reload","hydrateDom","_context6","preventDefault"],"mappings":"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","file":"cart.min.js","sourcesContent":["/* ***** VARIABLES ***** */\r\nvar cart = localStorage;\r\n\r\nvar cartCounter = 0;\r\nvar totalPrice = 0;\r\n\r\nvar productId, productColor, productQuantity;\r\n\r\n\r\n/* ***** CLASSES ***** */\r\nclass Contact {\r\n    constructor (firstName, lastName, address, city, email) {\r\n        this.firstName = firstName.value;\r\n        this.lastName = lastName.value;\r\n        this.address = address.value;\r\n        this.city = city.value;\r\n        this.email = email.value;\r\n    }\r\n}\r\n\r\n\r\n\r\n/* ***** FONCTIONS ***** */\r\n\r\n/* *** GÉNÉRAL *** */\r\n/* RÉCUPÉRATION DE CHAQUE PRODUIT SUR SERVEUR */\r\nasync function getProduct(id) {\r\n    return fetch(\"http://localhost:3000/api/products\")\r\n      .then(function(httpBodyResponse) {\r\n        return httpBodyResponse.json();\r\n      })\r\n      .then(function(products) {\r\n          for (product of products) { \r\n              if (product._id == id) {  \r\n                return product;}\r\n          }\r\n      })\r\n      .catch(function(error) {\r\n          return alert(\"Désolé, il y a eu une erreur: \", error);\r\n      });\r\n}\r\n\r\n/* UPDATE COMPTEUR D'ARTICLES */\r\nfunction updateCartCounter(cart) {\r\n    cartCounter = 0;\r\n    for (let i = 0; i < cart.length; i++) {\r\n        let key = localStorage.key(i);\r\n        cartCounter += Number(cart[key]);\r\n    }\r\n    return cartCounter\r\n}\r\n\r\n/* VÉRIFICATION FORMULAIRE */\r\nfunction checkForm() {\r\n    /* Variables utiles */\r\n    // Éléments d'input à check:\r\n    let firstName = document.getElementById(\"firstName\");\r\n    let lastName = document.getElementById(\"lastName\");\r\n    let address = document.getElementById(\"address\");\r\n    let city = document.getElementById(\"city\");\r\n    let email = document.getElementById(\"email\");\r\n\r\n    // Regexs pour check:\r\n    let regNames = /^[a-zA-Z\\s'-]+$/;\r\n    let regAddress = /\\d+\\,{0,1}\\s+\\w+\\s+\\w+/;\r\n    let regEmail = /^[A-Za-z0-9._%+-]+@([A-Za-z0-9-]+\\.)+([A-Za-z0-9]{2,4})$/;\r\n\r\n    let inputsToTest = [firstName, lastName, address, city, email];\r\n    let regexsToTest = [regNames, regNames, regAddress, regNames, regEmail];\r\n\r\n    // Boucle de test:\r\n    for (i=0; i < inputsToTest.length; i++) {\r\n        let inp = inputsToTest[i];\r\n        let reg = regexsToTest[i];\r\n\r\n        // Valeur du test pour l'input en cours:\r\n        let test = reg.test(inp.value);\r\n        \r\n        // Si false sur ce test, message d'erreur sous le champ correspondant:\r\n        if (test == false) {\r\n            var globalTest = false;\r\n            switch(inp.name) {\r\n                case \"firstName\": \r\n                    document.getElementById(inp.name + \"ErrorMsg\").textContent = \"Ce champ peut contenir des lettres majuscules et minuscules, apostrophes et tirets.\";\r\n                    break;\r\n                case \"lastName\": \r\n                    document.getElementById(inp.name + \"ErrorMsg\").textContent = \"Ce champ peut contenir des lettres majuscules et minuscules, apostrophes et tirets.\";\r\n                    break;\r\n                case \"address\": \r\n                    document.getElementById(inp.name + \"ErrorMsg\").textContent = \"Ce champ doit commencer par un ou plusieurs chiffres éventuellement suivis d'une virgule, puis obligatoirement des lettres.\";\r\n                    break;\r\n                case \"city\":\r\n                    document.getElementById(inp.name + \"ErrorMsg\").textContent = \"Ce champ doit contenir des lettres, et éventuellement une apostrophe et/ou un tiret.\";\r\n                    break;\r\n                case \"email\":\r\n                    document.getElementById(inp.name + \"ErrorMsg\").textContent = \"Ce champ doit contenir une adresse mail valide, par exemple: Kim.robert@kanap.com\";\r\n                    break;\r\n            }\r\n        }\r\n    } \r\n    return globalTest;\r\n}\r\n\r\n/* GÉNÉRATION TABLEAU PRODUITS */\r\nasync function createTable(cart) {\r\n    let productsTable = [];\r\n    for(let i = 0; i < cart.length; i++) {\r\n        let cartKey = localStorage.key(i);\r\n        let splitKey = cartKey.split(\" \");\r\n        productId = splitKey[0];\r\n        if (productsTable.includes(productId)) {\r\n            continue;\r\n        }\r\n        else {\r\n            productsTable[i] = productId;\r\n        }\r\n    }\r\n    return productsTable;\r\n}\r\n\r\n/* GÉNÉRATION DONNÉES ENVOI */\r\nasync function createData() {\r\n    contact = new Contact(firstName, lastName, address, city, email);\r\n\r\n    const products = await createTable(cart);\r\n    \r\n    var orderData = {\r\n        contact,\r\n        products\r\n    };\r\n\r\n    return orderData\r\n}\r\n\r\n\r\n/* ENVOI COMMANDE */\r\nasync function postOrder(data) {\r\n    fetch(\"http://localhost:3000/api/products/order\", {\r\n        method: \"POST\",\r\n        redirect: \"manual\",\r\n        headers: {\"Content-type\": \"application/json\"},\r\n        body: JSON.stringify(data),\r\n    })\r\n    .then(function(response) {\r\n        return response.json();\r\n    })\r\n    .then(function(json){\r\n        cart.clear();\r\n        \r\n        return window.location = \"confirmation.html?orderId=\" + json.orderId;\r\n    })\r\n    .catch(function(err) {\r\n        return alert(\"Oooops! Il y a eu une erreur: \", err);\r\n    })\r\n}\r\n\r\n/* *** DOM DYNAMIQUE ***  */\r\nasync function hydrateDom(product, cartCounter, totalPrice, productQuantity, cartKey) {\r\n    /* AFFICHAGE PRODUITS */\r\n    /* Création balises */\r\n    let cartItem = document.createElement(\"article\");\r\n    let cartItemImg = document.createElement(\"div\");\r\n    let productImg = document.createElement(\"img\");\r\n\r\n    let cartItemContent = document.createElement(\"div\");\r\n    let cartItemContentDescr = document.createElement(\"div\");\r\n    let cartItemContentTitle = document.createElement(\"h2\");\r\n    let cartItemContentColor = document.createElement(\"p\");\r\n    let cartItemContentPrice = document.createElement(\"p\");\r\n\r\n\r\n    let cartItemSettings = document.createElement(\"div\");\r\n\r\n    let settingsQuantity = document.createElement(\"div\");\r\n    let settingsQuantityText = document.createElement(\"p\");\r\n    let settingsQuantityInput = document.createElement(\"input\");\r\n\r\n    let deleteContainer = document.createElement(\"div\");\r\n    let deleteText = document.createElement(\"p\");\r\n\r\n\r\n    /* Position balises */\r\n    document.getElementById(\"cart__items\").appendChild(cartItem);\r\n    cartItem.appendChild(cartItemImg);\r\n    cartItemImg.appendChild(productImg);\r\n\r\n    cartItem.appendChild(cartItemContent);\r\n    cartItemContent.appendChild(cartItemContentDescr);\r\n    cartItemContentDescr.appendChild(cartItemContentTitle);\r\n    cartItemContentDescr.appendChild(cartItemContentColor);\r\n    cartItemContentDescr.appendChild(cartItemContentPrice);\r\n\r\n    cartItemContent.appendChild(cartItemSettings);\r\n\r\n    cartItemSettings.appendChild(settingsQuantity);\r\n    settingsQuantity.appendChild(settingsQuantityText);\r\n    settingsQuantity.appendChild(settingsQuantityInput);\r\n\r\n    cartItemSettings.appendChild(deleteContainer);\r\n    deleteContainer.appendChild(deleteText);\r\n\r\n\r\n    /* Attributs et contenu (balises créées avec js) */\r\n    cartItem.setAttribute(\"class\", \"cart__item\");\r\n    cartItem.setAttribute(\"data-id\", productId);\r\n    cartItem.setAttribute(\"data-color\", productColor);\r\n\r\n    cartItemImg.setAttribute(\"class\", \"cart__item__img\")\r\n\r\n    productImg.setAttribute(\"src\", product.imageUrl);\r\n    productImg.setAttribute(\"alt\", product.altTxt);\r\n\r\n\r\n    cartItemContent.setAttribute(\"class\", \"cart__item__content\");\r\n    cartItemContentDescr.setAttribute(\"class\", \"cart__item__content__description\")\r\n    cartItemContentTitle.textContent = product.name;\r\n    cartItemContentColor.textContent = productColor;\r\n    cartItemContentPrice.textContent = Number(product.price) + \" €\";\r\n\r\n    cartItemSettings.setAttribute(\"class\", \"cart__item__content__settings\");\r\n    \r\n    settingsQuantity.setAttribute(\"class\", \"cart__item__content__settings__quantity\");\r\n    settingsQuantityText.textContent = \"Qté : \" + productQuantity;\r\n    settingsQuantityInput.setAttribute(\"type\", \"number\");\r\n    settingsQuantityInput.setAttribute(\"class\", \"itemQuantity\");\r\n    settingsQuantityInput.setAttribute(\"name\", \"itemQuantity\");\r\n    settingsQuantityInput.setAttribute(\"min\", \"1\");\r\n    settingsQuantityInput.setAttribute(\"max\", \"100\");\r\n    settingsQuantityInput.setAttribute(\"value\", productQuantity);\r\n\r\n    deleteContainer.setAttribute(\"class\", \"cart__item__content__settings__delete\");\r\n    deleteText.setAttribute(\"class\", \"deleteItem\");\r\n    deleteText.textContent = \"Supprimer\";\r\n\r\n    /* Attributs et contenus (balises existantes dans le html) */\r\n    document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n    document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n\r\n    /* MODIFICATIONS DYNAMIQUES PANIER */\r\n\r\n    /* Modification quantité: */\r\n    settingsQuantityInput.addEventListener(\"change\", function(e) {\r\n        //Comptage items depuis localStorage\r\n        cartCounter = updateCartCounter(cart);\r\n        //Récupération informations objet visé\r\n        productId = e.target.closest(\".cart__item\").getAttribute(\"data-id\");\r\n        productColor = e.target.closest(\".cart__item\").getAttribute(\"data-color\");\r\n        cartKey = productId + \" \" + productColor;\r\n        //Quantité objet avant modification de l'input\r\n        let initialQuantity =  Number(cart[cartKey]);\r\n        //Màj prix et quantité\r\n        totalPrice -= initialQuantity * Number(product.price);\r\n        //Vérification valeur input quantité produit:\r\n        if (Number.isInteger(parseInt(e.target.value)) && e.target.value > 0) {\r\n            productQuantity = e.target.value;\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            alert(\"Veuillez entrer une quantité valide (entier positif) pour chaque article ou le supprimer via le bouton adéquat.\");\r\n            let orderButton = document.getElementById(\"order\");\r\n            orderButton.setAttribute(\"disabled\", \"true\");\r\n        }\r\n        totalPrice += productQuantity * Number(product.price);\r\n        //Màj quantité dans le localStorage\r\n        cart[cartKey] = productQuantity;\r\n        //Màj compteur via comptage localStorage\r\n        cartCounter = updateCartCounter(cart);\r\n        //Màj affichage\r\n        document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n        document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n\r\n    });\r\n    \r\n    /* Suppression d'un produit: */\r\n    deleteText.addEventListener(\"click\", function(e) {\r\n        cartCounter -= Number(productQuantity);\r\n        totalPrice -= Number(productQuantity) * Number(product.price);\r\n        cart.removeItem(cartKey);\r\n        window.location.reload();\r\n    });\r\n}\r\n\r\n\r\n\r\n/* ***** ACTIONS ***** */\r\n(async function() {\r\n    /* SI PANIER VIDE */ \r\n    if (cart.length == 0) {\r\n        alert(\"Impossible de passer commande, votre panier est vide! \\nVous allez être redirigé-e vers l'index\");\r\n        return window.location = \"../html/index.html\";\r\n    }\r\n\r\n    /* SINON */\r\n    // Affichage dynamique produit par produit:\r\n    for(let i = 0; i < cart.length; i++){\r\n        // (Récupération infos produits en local storage:)\r\n        var cartKey = localStorage.key(i);\r\n        var splitKey = cartKey.split(\" \");\r\n        productId = splitKey[0];\r\n        productColor = splitKey[1];\r\n        productQuantity = cart.getItem(cartKey);\r\n        \r\n        // (Màj compteur d'items:)\r\n        cartCounter += Number(productQuantity);\r\n        \r\n        // (Infos serveur:)\r\n        var product = await getProduct(productId);\r\n        totalPrice += Number(productQuantity) * Number(product.price);\r\n        \r\n        // (Contenu dynamique page:)\r\n        const pageContent = await hydrateDom(product, cartCounter, totalPrice, productQuantity, cartKey);\r\n    }\r\n    \r\n    /* Vérification formulaire: */\r\n    const userForm = document.getElementById(\"cart__order__form\");\r\n    userForm.addEventListener(\"submit\", async function (e) {\r\n        e.preventDefault();\r\n        \r\n        let check = checkForm(e);\r\n\r\n        if (check == false) {\r\n            return false;\r\n        }\r\n        let data = await createData();\r\n        let order = await postOrder(data);\r\n        \r\n        return true;\r\n    });\r\n})()\r\n\r\n\r\n        \r\n\r\n\r\n"]}