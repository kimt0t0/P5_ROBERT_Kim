{"version":3,"sources":["cart.js"],"names":["productId","productColor","productQuantity","cart","localStorage","cartCounter","totalPrice","Contact","firstName","lastName","address","city","email","_classCallCheck","this","value","getProduct","id","regeneratorRuntime","async","_context","prev","next","abrupt","fetch","then","httpBodyResponse","json","products","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","product","_id","err","error","alert","stop","setFormAttributes","inputName","regexModel","min","max","title","_context2","setAttribute","updateCartCounter","i","length","key","Number","createProducts","cartKey","splitKey","_context3","split","includes","checkForm","e","regNames","inputsToTest","regexToTest","order","_context4","document","getElementById","test","errMessage","name","textContent","preventDefault","contact","awrap","sent","orderData","postOrder","console","data","method","window","location","orderId","log","hydrateDom","cartItem","cartItemImg","productImg","cartItemContent","cartItemContentDescr","cartItemContentTitle","cartItemContentColor","cartItemContentPrice","cartItemSettings","settingsQuantity","settingsQuantityText","settingsQuantityInput","deleteContainer","deleteText","_context6","createElement","regAddress","regEmail","appendChild","imageUrl","altTxt","price","addEventListener","target","getAttribute","initialQuantity","removeItem"],"mappings":"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","file":"cart.min.js","sourcesContent":["/* *** VARIABLES *** */\r\nconst cart = localStorage;\r\n\r\nvar cartCounter = 0;\r\nvar totalPrice = 0;\r\n\r\nvar productId, productColor, productQuantity;\r\n\r\n\r\n\r\n\r\n/* *** CLASSES *** */\r\n\r\nclass Contact {\r\n    constructor (firstName, lastName, address, city, email) {\r\n        this.firstName = firstName.value;\r\n        this.lastName = lastName.value;\r\n        this.address = address.value;\r\n        this.city = city.value;\r\n        this.email = email.value;\r\n    }\r\n\r\n    getFirstName() {\r\n        return this.firstName;\r\n    }\r\n\r\n    getLastName() {\r\n        return this.lastName;\r\n    }\r\n\r\n    getAddress() {\r\n        return this.address;\r\n    }\r\n\r\n    getCity() {\r\n        return this.city;\r\n    }\r\n\r\n    getEmail() {\r\n        return this.email;\r\n    }\r\n}\r\n\r\n\r\n\r\n/* *** FONCTIONS *** */\r\n\r\n/* GÉNÉRAL */\r\n/* Accès aux infos produit sur serveur */\r\nasync function getProduct(id) {\r\n    return fetch(\"http://localhost:3000/api/products\")\r\n      .then(function(httpBodyResponse) {\r\n        return httpBodyResponse.json();\r\n      })\r\n      .then(function(products) {\r\n          for (product of products) { \r\n              if (product._id == id) {  \r\n                return product;}\r\n          }\r\n      })\r\n      .catch(function(error) {\r\n          alert(error);\r\n      });\r\n}\r\n\r\n/* Attributs du formulaire */\r\nasync function setFormAttributes(inputName, regexModel, min, max, title) {\r\n    inputName.setAttribute(\"pattern\", regexModel);\r\n    inputName.setAttribute(\"min-length\", min);\r\n    inputName.setAttribute(\"max-length\", max);\r\n    inputName.setAttribute(\"title\", title);\r\n}\r\n\r\n/* Màj compteur d'articles */\r\nfunction updateCartCounter(cart) {\r\n    cartCounter = 0;\r\n    for (let i = 0; i < cart.length; i++) {\r\n        let key = localStorage.key(i);\r\n        cartCounter += Number(cart[key]);\r\n    }\r\n    return cartCounter\r\n}\r\n\r\n/* FORMULAIRE */\r\n\r\n/* Création tableau commande */\r\nasync function createProducts(cart) {\r\n    let products = [];\r\n    for(let i = 0; i < cart.length; i++) {\r\n        let cartKey = localStorage.key(i);\r\n        let splitKey = cartKey.split(\" \");\r\n        productId = splitKey[0];\r\n        if (products.includes(productId)) {\r\n        }\r\n        else {\r\n            products[i] = productId;\r\n        }\r\n    }\r\n    return products;\r\n}\r\n\r\n/* Vérification et création objet contact + tableau produits */\r\nasync function checkForm(e) {\r\n\r\n    // Éléments d'input à check:\r\n    let firstName = document.getElementById(\"firstName\");\r\n    let lastName = document.getElementById(\"lastName\");\r\n    let address = document.getElementById(\"address\");\r\n    let city = document.getElementById(\"city\");\r\n    let email = document.getElementById(\"email\");\r\n\r\n    // Regexs pour check:\r\n    const regNames = /^[a-zA-Z\\s'-]+$/;\r\n    const regAddress = /^[a-zA-Z0-9\\s,'-]*$/; //problème: valide les entrées contenant uniquement des chiffres...\r\n    const regEmail = /^[A-Za-z0-9._%+-]+@([A-Za-z0-9-]+\\.)+([A-Za-z0-9]{2,4})$/;\r\n\r\n    let inputsToTest = [firstName, lastName, address, city, email];\r\n    let regexToTest = [regNames, regNames, regAddress, regNames, regEmail];\r\n\r\n    //Indicateur mauvais remplissage:        \r\n    let error = false;\r\n    \r\n    // Pour chaque élément de la liste d'input...:\r\n    for (let i = 0; i < inputsToTest.length; i++) {\r\n        // Test:\r\n        test = regexToTest[i].test(inputsToTest[i].value);\r\n        // Si test faux ne pas envoyer et message d'erreur:\r\n        if (test == false) {\r\n            errMessage = document.getElementById(inputsToTest[i].name + \"ErrorMsg\");\r\n            errMessage.textContent = \"Ce champ est vide ou n'a pas été complété correctement.\";\r\n            error = true;\r\n        }\r\n    }\r\n    \r\n    if (error == true) {\r\n        e.preventDefault();\r\n        return alert(\"Votre commande n'a pas pu être finalisée.\\nVeuillez vérifier que vous avez complété correctement le formulaire.\\n\\nEn cas de problème, n'hésitez pas à contacter notre support\");\r\n    }\r\n    else {\r\n        e.preventDefault();\r\n        contact = new Contact(firstName, lastName, address, city, email);\r\n        const products = await createProducts(cart);\r\n        orderData = {\r\n            contact,\r\n            products\r\n        };\r\n        let order = await postOrder(orderData);\r\n        console.log(order);\r\n    }\r\n\r\n}\r\n\r\n/* Envoi commande */\r\nasync function postOrder(data) {\r\n    fetch(\"http://localhost:3000/api/products/order\", {\r\n        method: \"POST\",\r\n        redirect: \"manual\",\r\n        headers: {\"Content-type\": \"application/json\"},\r\n        body: JSON.stringify(data),\r\n    })\r\n    .then(function(response) {\r\n        return response.json();\r\n    })\r\n    .then(function(json){\r\n        return window.location = \"confirmation.html?orderId=\" + json.orderId;\r\n    })\r\n    .catch(function(err) {\r\n        return console.log(\"Erreur: \", err);\r\n    })\r\n}\r\n\r\n\r\n/* *** DOM DYNAMIQUE ***  */\r\nasync function hydrateDom(product, cartCounter, totalPrice, productQuantity, cartKey) {\r\n    /* ÉLÉMENTS A GÉNÉRER ET PLACER POUR AFFICHAGE */\r\n    /* Création balises */\r\n    let cartItem = document.createElement(\"article\");\r\n    let cartItemImg = document.createElement(\"div\");\r\n    let productImg = document.createElement(\"img\");\r\n\r\n    let cartItemContent = document.createElement(\"div\");\r\n    let cartItemContentDescr = document.createElement(\"div\");\r\n    let cartItemContentTitle = document.createElement(\"h2\");\r\n    let cartItemContentColor = document.createElement(\"p\");\r\n    let cartItemContentPrice = document.createElement(\"p\");\r\n\r\n\r\n    let cartItemSettings = document.createElement(\"div\");\r\n\r\n    let settingsQuantity = document.createElement(\"div\");\r\n    let settingsQuantityText = document.createElement(\"p\");\r\n    let settingsQuantityInput = document.createElement(\"input\");\r\n\r\n    let deleteContainer = document.createElement(\"div\");\r\n    let deleteText = document.createElement(\"p\");\r\n\r\n\r\n    /* Position des balises créées */\r\n    document.getElementById(\"cart__items\").appendChild(cartItem);\r\n    cartItem.appendChild(cartItemImg);\r\n    cartItemImg.appendChild(productImg);\r\n\r\n    cartItem.appendChild(cartItemContent);\r\n    cartItemContent.appendChild(cartItemContentDescr);\r\n    cartItemContentDescr.appendChild(cartItemContentTitle);\r\n    cartItemContentDescr.appendChild(cartItemContentColor);\r\n    cartItemContentDescr.appendChild(cartItemContentPrice);\r\n\r\n    cartItemContent.appendChild(cartItemSettings);\r\n\r\n    cartItemSettings.appendChild(settingsQuantity);\r\n    settingsQuantity.appendChild(settingsQuantityText);\r\n    settingsQuantity.appendChild(settingsQuantityInput);\r\n\r\n    cartItemSettings.appendChild(deleteContainer);\r\n    deleteContainer.appendChild(deleteText);\r\n\r\n\r\n    /* Attributs et contenu des balises créées */\r\n    cartItem.setAttribute(\"class\", \"cart__item\");\r\n    cartItem.setAttribute(\"data-id\", productId);\r\n    cartItem.setAttribute(\"data-color\", productColor);\r\n\r\n    cartItemImg.setAttribute(\"class\", \"cart__item__img\")\r\n\r\n    productImg.setAttribute(\"src\", product.imageUrl);\r\n    productImg.setAttribute(\"alt\", product.altTxt);\r\n\r\n\r\n    cartItemContent.setAttribute(\"class\", \"cart__item__content\");\r\n    cartItemContentDescr.setAttribute(\"class\", \"cart__item__content__description\")\r\n    cartItemContentTitle.textContent = product.name;\r\n    cartItemContentColor.textContent = productColor;\r\n    cartItemContentPrice.textContent = Number(product.price) + \" €\";\r\n\r\n    cartItemSettings.setAttribute(\"class\", \"cart__item__content__settings\");\r\n    \r\n    settingsQuantity.setAttribute(\"class\", \"cart__item__content__settings__quantity\");\r\n    settingsQuantityText.textContent = \"Qté : \" + productQuantity;\r\n    settingsQuantityInput.setAttribute(\"type\", \"number\");\r\n    settingsQuantityInput.setAttribute(\"class\", \"itemQuantity\");\r\n    settingsQuantityInput.setAttribute(\"name\", \"itemQuantity\");\r\n    settingsQuantityInput.setAttribute(\"min\", \"1\");\r\n    settingsQuantityInput.setAttribute(\"max\", \"100\");\r\n    settingsQuantityInput.setAttribute(\"value\", productQuantity);\r\n\r\n    deleteContainer.setAttribute(\"class\", \"cart__item__content__settings__delete\");\r\n    deleteText.setAttribute(\"class\", \"deleteItem\");\r\n    deleteText.textContent = \"Supprimer\";\r\n\r\n    /* Attributs et contenus de balises existantes */\r\n    document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n    document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n\r\n        /* MODIFICATIONS DU PANIER */\r\n\r\n    /* Modification quantité: */\r\n    settingsQuantityInput.addEventListener(\"change\", function(e) {\r\n        //Comptage items depuis localStorage\r\n        cartCounter = updateCartCounter(cart);\r\n        //Récupération informations objet visé\r\n        productId = e.target.closest(\".cart__item\").getAttribute(\"data-id\");\r\n        productColor = e.target.closest(\".cart__item\").getAttribute(\"data-color\");\r\n        cartKey = productId + \" \" + productColor;\r\n        //Quantité objet avant modification de l'input\r\n        let initialQuantity =  Number(cart[cartKey]);\r\n        //Màj prix et quantité\r\n        totalPrice -= initialQuantity * Number(product.price);\r\n        productQuantity = Number(e.target.value);\r\n        totalPrice += productQuantity * Number(product.price);\r\n        //Màj quantité dans le localStorage\r\n        cart[cartKey] = productQuantity;\r\n        //Màj compteur via comptage localStorage\r\n        cartCounter = updateCartCounter(cart);\r\n        //Màj affichage\r\n        document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n        document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n\r\n    });\r\n    \r\n    /* Suppression d'un produit du panier: */\r\n    deleteText.addEventListener(\"click\", function(e) {\r\n        cartCounter -= Number(productQuantity);\r\n        totalPrice -= Number(productQuantity) * Number(product.price);\r\n        let cartKey = productId + \" \" + productColor;\r\n        cart.removeItem(cartKey);\r\n        document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n        document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n        e.target.closest(\"article\").remove();\r\n    });\r\n}\r\n\r\n/* *** ACTIONS *** */\r\n(async function() {\r\n    /* POUR CHAQUE PRODUIT DU PANIER... */\r\n    for(let i = 0; i < cart.length; i++){\r\n        /* Infos en local storage: */\r\n        var cartKey = localStorage.key(i);\r\n        var splitKey = cartKey.split(\" \");\r\n        productId = splitKey[0];\r\n        productColor = splitKey[1];\r\n        /* Quantité (input): */\r\n        productQuantity = cart.getItem(cartKey);\r\n        /* Màj compteur d'items */\r\n        cartCounter += Number(productQuantity);\r\n\r\n        /* Infos serveur: */\r\n        var product = await getProduct(productId);\r\n        totalPrice += Number(productQuantity) * Number(product.price);\r\n\r\n        /* Génération contenu page au loading: */\r\n        var pageContent = await hydrateDom(product, cartCounter, totalPrice, productQuantity, cartKey);\r\n    }\r\n    \r\n    /* REMPLISSAGE ET VÉRFICATIONS FORMULAIRE */\r\n    /* Accès au formulaire */\r\n    var userForm = document.getElementById(\"cart__order__form\");\r\n    userForm.addEventListener(\"submit\", function (e) {\r\n        checkForm(e);\r\n    });\r\n\r\n})()\r\n\r\n        \r\n\r\n\r\n"]}