{"version":3,"sources":["cart.js"],"names":["productId","productColor","productQuantity","cart","localStorage","cartCounter","totalPrice","Contact","firstName","lastName","address","city","email","_classCallCheck","this","value","getProduct","id","regeneratorRuntime","async","_context","prev","next","abrupt","fetch","then","httpBodyResponse","json","products","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","product","_id","err","error","alert","stop","updateCartCounter","i","length","key","cartKey","splitKey","split","includes","checkForm","e","regNames","inputsToTest","regexToTest","order","_context3","document","getElementById","regEmail","test","name","errMessage","textContent","createProducts","preventDefault","contact","awrap","sent","postOrder","orderData","console","log","data","_context4","method","redirect","headers","Content-type","body","JSON","stringify","response","window","location","orderId","hydrateDom","cartItem","cartItemImg","productImg","cartItemContent","cartItemContentDescr","cartItemContentTitle","cartItemContentColor","cartItemContentPrice","cartItemSettings","settingsQuantity","settingsQuantityText","settingsQuantityInput","deleteContainer","deleteText","_context5","createElement","regAddress","appendChild","setAttribute","imageUrl","altTxt","Number","addEventListener","target","getAttribute","closest","initialQuantity","price","removeItem"],"mappings":"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","file":"cart.min.js","sourcesContent":["/* *** VARIABLES *** */\r\nvar cart = localStorage;\r\n\r\nvar cartCounter = 0;\r\nvar totalPrice = 0;\r\n\r\nvar productId, productColor, productQuantity;\r\n\r\n\r\n\r\n\r\n/* *** CLASSES *** */\r\n\r\nclass Contact {\r\n    constructor (firstName, lastName, address, city, email) {\r\n        this.firstName = firstName.value;\r\n        this.lastName = lastName.value;\r\n        this.address = address.value;\r\n        this.city = city.value;\r\n        this.email = email.value;\r\n    }\r\n\r\n    getFirstName() {\r\n        return this.firstName;\r\n    }\r\n\r\n    getLastName() {\r\n        return this.lastName;\r\n    }\r\n\r\n    getAddress() {\r\n        return this.address;\r\n    }\r\n\r\n    getCity() {\r\n        return this.city;\r\n    }\r\n\r\n    getEmail() {\r\n        return this.email;\r\n    }\r\n}\r\n\r\n\r\n\r\n/* *** FONCTIONS *** */\r\n\r\n/* GÉNÉRAL */\r\n/* Accès aux infos produit sur serveur */\r\nasync function getProduct(id) {\r\n    return fetch(\"http://localhost:3000/api/products\")\r\n      .then(function(httpBodyResponse) {\r\n        return httpBodyResponse.json();\r\n      })\r\n      .then(function(products) {\r\n          for (product of products) { \r\n              if (product._id == id) {  \r\n                return product;}\r\n          }\r\n      })\r\n      .catch(function(error) {\r\n          alert(error);\r\n      });\r\n}\r\n\r\n/* Màj compteur d'articles */\r\nfunction updateCartCounter(cart) {\r\n    cartCounter = 0;\r\n    for (let i = 0; i < cart.length; i++) {\r\n        let key = localStorage.key(i);\r\n        cartCounter += Number(cart[key]);\r\n    }\r\n    return cartCounter\r\n}\r\n\r\n/* FORMULAIRE */\r\n\r\n/* Création tableau produits pour commande */\r\nasync function createProducts(cart) {\r\n    let products = [];\r\n    for(let i = 0; i < cart.length; i++) {\r\n        let cartKey = localStorage.key(i);\r\n        let splitKey = cartKey.split(\" \");\r\n        productId = splitKey[0];\r\n        if (products.includes(productId)) {\r\n            continue;\r\n        }\r\n        else {\r\n            products[i] = productId;\r\n        }\r\n    }\r\n    return products;\r\n}\r\n\r\n/* Vérification et création objet contact + tableau produits */\r\nasync function checkForm(e) {\r\n\r\n    // Éléments d'input à check:\r\n    let firstName = document.getElementById(\"firstName\");\r\n    let lastName = document.getElementById(\"lastName\");\r\n    let address = document.getElementById(\"address\");\r\n    let city = document.getElementById(\"city\");\r\n    let email = document.getElementById(\"email\");\r\n\r\n    // Regexs pour check:\r\n    const regNames = /^[a-zA-Z\\s'-]+$/;\r\n    const regAddress = /^[a-zA-Z0-9\\s,'-]*$/; //problème: valide les entrées contenant uniquement des chiffres...\r\n\r\n    let inputsToTest = [firstName, lastName, address, city, email];\r\n    let regexToTest = [regNames, regNames, regAddress, regNames, regEmail];\r\n\r\n    //Indicateur mauvais remplissage:        \r\n    let error = false;\r\n    \r\n    // Pour chaque élément de la liste d'input...:\r\n    for (let i = 0; i < inputsToTest.length; i++) {\r\n        // Test:\r\n        test = regexToTest[i].test(inputsToTest[i].value);\r\n        // Si test faux ne pas envoyer et message d'erreur:\r\n        if (test == false) {\r\n            errMessage = document.getElementById(inputsToTest[i].name + \"ErrorMsg\");\r\n            errMessage.textContent = \"Ce champ est vide ou n'a pas été complété correctement.\";\r\n            error = true;\r\n        }\r\n    }\r\n    \r\n    if (error == true) {\r\n        e.preventDefault();\r\n        return alert(\"Votre commande n'a pas pu être finalisée.\\nVeuillez vérifier que vous avez complété correctement le formulaire.\\n\\nEn cas de problème, n'hésitez pas à contacter notre support\");\r\n    }\r\n    else {\r\n        e.preventDefault();\r\n        contact = new Contact(firstName, lastName, address, city, email);\r\n        const products = await createProducts(cart);\r\n        orderData = {\r\n            contact,\r\n            products\r\n        };\r\n        let order = await postOrder(orderData);\r\n        console.log(order);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n/* Envoi commande */\r\nasync function postOrder(data) {\r\n    fetch(\"http://localhost:3000/api/products/order\", {\r\n        method: \"POST\",\r\n        redirect: \"manual\",\r\n        headers: {\"Content-type\": \"application/json\"},\r\n        body: JSON.stringify(data),\r\n    })\r\n    .then(function(response) {\r\n        return response.json();\r\n    })\r\n    .then(function(json){\r\n        return window.location = \"confirmation.html?orderId=\" + json.orderId;\r\n    })\r\n    .catch(function(err) {\r\n        return console.log(\"Erreur: \", err);\r\n    })\r\n}\r\n\r\n\r\n/* *** DOM DYNAMIQUE ***  */\r\nasync function hydrateDom(product, cartCounter, totalPrice, productQuantity, cartKey) {\r\n    /* ÉLÉMENTS A GÉNÉRER ET PLACER POUR AFFICHAGE */\r\n    /* Création balises */\r\n    let cartItem = document.createElement(\"article\");\r\n    let cartItemImg = document.createElement(\"div\");\r\n    let productImg = document.createElement(\"img\");\r\n\r\n    let cartItemContent = document.createElement(\"div\");\r\n    let cartItemContentDescr = document.createElement(\"div\");\r\n    let cartItemContentTitle = document.createElement(\"h2\");\r\n    let cartItemContentColor = document.createElement(\"p\");\r\n    let cartItemContentPrice = document.createElement(\"p\");\r\n\r\n\r\n    let cartItemSettings = document.createElement(\"div\");\r\n\r\n    let settingsQuantity = document.createElement(\"div\");\r\n    let settingsQuantityText = document.createElement(\"p\");\r\n    let settingsQuantityInput = document.createElement(\"input\");\r\n\r\n    let deleteContainer = document.createElement(\"div\");\r\n    let deleteText = document.createElement(\"p\");\r\n\r\n\r\n    /* Position des balises créées */\r\n    document.getElementById(\"cart__items\").appendChild(cartItem);\r\n    cartItem.appendChild(cartItemImg);\r\n    cartItemImg.appendChild(productImg);\r\n\r\n    cartItem.appendChild(cartItemContent);\r\n    cartItemContent.appendChild(cartItemContentDescr);\r\n    cartItemContentDescr.appendChild(cartItemContentTitle);\r\n    cartItemContentDescr.appendChild(cartItemContentColor);\r\n    cartItemContentDescr.appendChild(cartItemContentPrice);\r\n\r\n    cartItemContent.appendChild(cartItemSettings);\r\n\r\n    cartItemSettings.appendChild(settingsQuantity);\r\n    settingsQuantity.appendChild(settingsQuantityText);\r\n    settingsQuantity.appendChild(settingsQuantityInput);\r\n\r\n    cartItemSettings.appendChild(deleteContainer);\r\n    deleteContainer.appendChild(deleteText);\r\n\r\n\r\n    /* Attributs et contenu des balises créées */\r\n    cartItem.setAttribute(\"class\", \"cart__item\");\r\n    cartItem.setAttribute(\"data-id\", productId);\r\n    cartItem.setAttribute(\"data-color\", productColor);\r\n\r\n    cartItemImg.setAttribute(\"class\", \"cart__item__img\")\r\n\r\n    productImg.setAttribute(\"src\", product.imageUrl);\r\n    productImg.setAttribute(\"alt\", product.altTxt);\r\n\r\n\r\n    cartItemContent.setAttribute(\"class\", \"cart__item__content\");\r\n    cartItemContentDescr.setAttribute(\"class\", \"cart__item__content__description\")\r\n    cartItemContentTitle.textContent = product.name;\r\n    cartItemContentColor.textContent = productColor;\r\n    cartItemContentPrice.textContent = Number(product.price) + \" €\";\r\n\r\n    cartItemSettings.setAttribute(\"class\", \"cart__item__content__settings\");\r\n    \r\n    settingsQuantity.setAttribute(\"class\", \"cart__item__content__settings__quantity\");\r\n    settingsQuantityText.textContent = \"Qté : \" + productQuantity;\r\n    settingsQuantityInput.setAttribute(\"type\", \"number\");\r\n    settingsQuantityInput.setAttribute(\"class\", \"itemQuantity\");\r\n    settingsQuantityInput.setAttribute(\"name\", \"itemQuantity\");\r\n    settingsQuantityInput.setAttribute(\"min\", \"1\");\r\n    settingsQuantityInput.setAttribute(\"max\", \"100\");\r\n    settingsQuantityInput.setAttribute(\"value\", productQuantity);\r\n\r\n    deleteContainer.setAttribute(\"class\", \"cart__item__content__settings__delete\");\r\n    deleteText.setAttribute(\"class\", \"deleteItem\");\r\n    deleteText.textContent = \"Supprimer\";\r\n\r\n    /* Attributs et contenus de balises existantes */\r\n    document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n    document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n\r\n        /* MODIFICATIONS DU PANIER */\r\n\r\n    /* Modification quantité: */\r\n    settingsQuantityInput.addEventListener(\"change\", function(e) {\r\n        //Comptage items depuis localStorage\r\n        cartCounter = updateCartCounter(cart);\r\n        //Récupération informations objet visé\r\n        productId = e.target.closest(\".cart__item\").getAttribute(\"data-id\");\r\n        productColor = e.target.closest(\".cart__item\").getAttribute(\"data-color\");\r\n        cartKey = productId + \" \" + productColor;\r\n        //Quantité objet avant modification de l'input\r\n        let initialQuantity =  Number(cart[cartKey]);\r\n        //Màj prix et quantité\r\n        totalPrice -= initialQuantity * Number(product.price);\r\n        productQuantity = Number(e.target.value);\r\n        totalPrice += productQuantity * Number(product.price);\r\n        //Màj quantité dans le localStorage\r\n        cart[cartKey] = productQuantity;\r\n        //Màj compteur via comptage localStorage\r\n        cartCounter = updateCartCounter(cart);\r\n        //Màj affichage\r\n        document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n        document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n\r\n    });\r\n    \r\n    /* Suppression d'un produit du panier: */\r\n    deleteText.addEventListener(\"click\", function(e) {\r\n        cartCounter -= Number(productQuantity);\r\n        totalPrice -= Number(productQuantity) * Number(product.price);\r\n        let cartKey = productId + \" \" + productColor;\r\n        cart.removeItem(cartKey);\r\n        document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n        document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n        e.target.closest(\"article\").remove();\r\n    });\r\n\r\n        /* VÉRIFICATION INPUT MAIL FORMULAIRE */\r\n    document.getElementById(\"email\").addEventListener(\"change\", function(e) {\r\n        console.log(\"input mail modifié\");\r\n        const regEmail = /^[A-Za-z0-9._%+-]+@([A-Za-z0-9-]+\\.)+([A-Za-z0-9]{2,4})$/;\r\n        let testMail = regEmail.test(e.target.value);\r\n        if (testMail == false) {\r\n            document.getElementById(\"emailErrorMsg\").textContent = \"Ce champ est vide ou n'a pas été complété correctement.\";\r\n        }\r\n        else {\r\n            document.getElementById(\"emailErrorMsg\").textContent = \"\";\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\n/* *** ACTIONS *** */\r\n(async function() {\r\n    /* POUR CHAQUE PRODUIT DU PANIER... */\r\n    for(let i = 0; i < cart.length; i++){\r\n        /* Infos en local storage: */\r\n        var cartKey = localStorage.key(i);\r\n        var splitKey = cartKey.split(\" \");\r\n        productId = splitKey[0];\r\n        productColor = splitKey[1];\r\n        /* Quantité (input): */\r\n        productQuantity = cart.getItem(cartKey);\r\n        /* Màj compteur d'items */\r\n        cartCounter += Number(productQuantity);\r\n\r\n        /* Infos serveur: */\r\n        var product = await getProduct(productId);\r\n        totalPrice += Number(productQuantity) * Number(product.price);\r\n\r\n        /* Génération contenu page au loading: */\r\n        var pageContent = await hydrateDom(product, cartCounter, totalPrice, productQuantity, cartKey);\r\n    }\r\n    \r\n    /* REMPLISSAGE ET VÉRFICATIONS FORMULAIRE */\r\n    /* Accès au formulaire */\r\n    var userForm = document.getElementById(\"cart__order__form\");\r\n    userForm.addEventListener(\"submit\", function (e) {\r\n        checkForm(e);\r\n    });\r\n\r\n})()\r\n\r\n\r\n        \r\n\r\n\r\n"]}