{"version":3,"sources":["cart.js"],"names":["productId","productColor","productQuantity","cart","localStorage","cartCounter","totalPrice","Contact","firstName","lastName","address","city","email","_classCallCheck","this","value","getProduct","id","regeneratorRuntime","async","_context","prev","next","abrupt","fetch","then","httpBodyResponse","json","products","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","product","_id","err","error","alert","stop","updateCartCounter","i","length","key","cartKey","splitKey","split","includes","checkForm","e","regNames","inputsToTest","regexToTest","order","_context3","document","getElementById","test","errMessage","name","textContent","createProducts","preventDefault","awrap","sent","orderData","contact","postOrder","console","log","_context4","method","redirect","headers","Content-type","body","JSON","stringify","data","response","window","location","orderId","hydrateDom","cartItem","cartItemImg","productImg","cartItemContent","cartItemContentDescr","cartItemContentTitle","cartItemContentColor","cartItemContentPrice","cartItemSettings","settingsQuantity","settingsQuantityText","settingsQuantityInput","deleteContainer","deleteText","_context5","createElement","appendChild","setAttribute","imageUrl","Number","price","addEventListener","target","closest","getAttribute","initialQuantity","removeItem","remove"],"mappings":"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","file":"cart.min.js","sourcesContent":["/* *** VARIABLES *** */\r\nconst cart = localStorage;\r\n\r\nvar cartCounter = 0;\r\nvar totalPrice = 0;\r\n\r\nvar productId, productColor, productQuantity;\r\n\r\n\r\n\r\n\r\n/* *** CLASSES *** */\r\n\r\nclass Contact {\r\n    constructor (firstName, lastName, address, city, email) {\r\n        this.firstName = firstName.value;\r\n        this.lastName = lastName.value;\r\n        this.address = address.value;\r\n        this.city = city.value;\r\n        this.email = email.value;\r\n    }\r\n\r\n    getFirstName() {\r\n        return this.firstName;\r\n    }\r\n\r\n    getLastName() {\r\n        return this.lastName;\r\n    }\r\n\r\n    getAddress() {\r\n        return this.address;\r\n    }\r\n\r\n    getCity() {\r\n        return this.city;\r\n    }\r\n\r\n    getEmail() {\r\n        return this.email;\r\n    }\r\n}\r\n\r\n\r\n\r\n/* *** FONCTIONS *** */\r\n\r\n/* GÉNÉRAL */\r\n/* Accès aux infos produit sur serveur */\r\nasync function getProduct(id) {\r\n    return fetch(\"http://localhost:3000/api/products\")\r\n      .then(function(httpBodyResponse) {\r\n        return httpBodyResponse.json();\r\n      })\r\n      .then(function(products) {\r\n          for (product of products) { \r\n              if (product._id == id) {  \r\n                return product;}\r\n          }\r\n      })\r\n      .catch(function(error) {\r\n          alert(error);\r\n      });\r\n}\r\n\r\n/* Màj compteur d'articles */\r\nfunction updateCartCounter(cart) {\r\n    cartCounter = 0;\r\n    for (let i = 0; i < cart.length; i++) {\r\n        let key = localStorage.key(i);\r\n        cartCounter += Number(cart[key]);\r\n    }\r\n    return cartCounter\r\n}\r\n\r\n/* FORMULAIRE */\r\n\r\n/* Création tableau produits pour commande */\r\nasync function createProducts(cart) {\r\n    let products = [];\r\n    for(let i = 0; i < cart.length; i++) {\r\n        let cartKey = localStorage.key(i);\r\n        let splitKey = cartKey.split(\" \");\r\n        productId = splitKey[0];\r\n        if (products.includes(productId)) {\r\n            continue;\r\n        }\r\n        else {\r\n            products[i] = productId;\r\n        }\r\n    }\r\n    return products;\r\n}\r\n\r\n/* Vérification et création objet contact + tableau produits */\r\nasync function checkForm(e) {\r\n\r\n    // Éléments d'input à check:\r\n    let firstName = document.getElementById(\"firstName\");\r\n    let lastName = document.getElementById(\"lastName\");\r\n    let address = document.getElementById(\"address\");\r\n    let city = document.getElementById(\"city\");\r\n    let email = document.getElementById(\"email\");\r\n\r\n    // Regexs pour check:\r\n    const regNames = /^[a-zA-Z\\s'-]+$/;\r\n    const regAddress = /^[a-zA-Z0-9\\s,'-]*$/; //problème: valide les entrées contenant uniquement des chiffres...\r\n    const regEmail = /^[A-Za-z0-9._%+-]+@([A-Za-z0-9-]+\\.)+([A-Za-z0-9]{2,4})$/;\r\n\r\n    let inputsToTest = [firstName, lastName, address, city, email];\r\n    let regexToTest = [regNames, regNames, regAddress, regNames, regEmail];\r\n\r\n    //Indicateur mauvais remplissage:        \r\n    let error = false;\r\n    \r\n    // Pour chaque élément de la liste d'input...:\r\n    for (let i = 0; i < inputsToTest.length; i++) {\r\n        // Test:\r\n        test = regexToTest[i].test(inputsToTest[i].value);\r\n        // Si test faux ne pas envoyer et message d'erreur:\r\n        if (test == false) {\r\n            errMessage = document.getElementById(inputsToTest[i].name + \"ErrorMsg\");\r\n            errMessage.textContent = \"Ce champ est vide ou n'a pas été complété correctement.\";\r\n            error = true;\r\n        }\r\n    }\r\n    \r\n    if (error == true) {\r\n        e.preventDefault();\r\n        return alert(\"Votre commande n'a pas pu être finalisée.\\nVeuillez vérifier que vous avez complété correctement le formulaire.\\n\\nEn cas de problème, n'hésitez pas à contacter notre support\");\r\n    }\r\n    else {\r\n        e.preventDefault();\r\n        contact = new Contact(firstName, lastName, address, city, email);\r\n        const products = await createProducts(cart);\r\n        orderData = {\r\n            contact,\r\n            products\r\n        };\r\n        let order = await postOrder(orderData);\r\n        console.log(order);\r\n    }\r\n\r\n}\r\n\r\n/* Envoi commande */\r\nasync function postOrder(data) {\r\n    fetch(\"http://localhost:3000/api/products/order\", {\r\n        method: \"POST\",\r\n        redirect: \"manual\",\r\n        headers: {\"Content-type\": \"application/json\"},\r\n        body: JSON.stringify(data),\r\n    })\r\n    .then(function(response) {\r\n        return response.json();\r\n    })\r\n    .then(function(json){\r\n        return window.location = \"confirmation.html?orderId=\" + json.orderId;\r\n    })\r\n    .catch(function(err) {\r\n        return console.log(\"Erreur: \", err);\r\n    })\r\n}\r\n\r\n\r\n/* *** DOM DYNAMIQUE ***  */\r\nasync function hydrateDom(product, cartCounter, totalPrice, productQuantity, cartKey) {\r\n    /* ÉLÉMENTS A GÉNÉRER ET PLACER POUR AFFICHAGE */\r\n    /* Création balises */\r\n    let cartItem = document.createElement(\"article\");\r\n    let cartItemImg = document.createElement(\"div\");\r\n    let productImg = document.createElement(\"img\");\r\n\r\n    let cartItemContent = document.createElement(\"div\");\r\n    let cartItemContentDescr = document.createElement(\"div\");\r\n    let cartItemContentTitle = document.createElement(\"h2\");\r\n    let cartItemContentColor = document.createElement(\"p\");\r\n    let cartItemContentPrice = document.createElement(\"p\");\r\n\r\n\r\n    let cartItemSettings = document.createElement(\"div\");\r\n\r\n    let settingsQuantity = document.createElement(\"div\");\r\n    let settingsQuantityText = document.createElement(\"p\");\r\n    let settingsQuantityInput = document.createElement(\"input\");\r\n\r\n    let deleteContainer = document.createElement(\"div\");\r\n    let deleteText = document.createElement(\"p\");\r\n\r\n\r\n    /* Position des balises créées */\r\n    document.getElementById(\"cart__items\").appendChild(cartItem);\r\n    cartItem.appendChild(cartItemImg);\r\n    cartItemImg.appendChild(productImg);\r\n\r\n    cartItem.appendChild(cartItemContent);\r\n    cartItemContent.appendChild(cartItemContentDescr);\r\n    cartItemContentDescr.appendChild(cartItemContentTitle);\r\n    cartItemContentDescr.appendChild(cartItemContentColor);\r\n    cartItemContentDescr.appendChild(cartItemContentPrice);\r\n\r\n    cartItemContent.appendChild(cartItemSettings);\r\n\r\n    cartItemSettings.appendChild(settingsQuantity);\r\n    settingsQuantity.appendChild(settingsQuantityText);\r\n    settingsQuantity.appendChild(settingsQuantityInput);\r\n\r\n    cartItemSettings.appendChild(deleteContainer);\r\n    deleteContainer.appendChild(deleteText);\r\n\r\n\r\n    /* Attributs et contenu des balises créées */\r\n    cartItem.setAttribute(\"class\", \"cart__item\");\r\n    cartItem.setAttribute(\"data-id\", productId);\r\n    cartItem.setAttribute(\"data-color\", productColor);\r\n\r\n    cartItemImg.setAttribute(\"class\", \"cart__item__img\")\r\n\r\n    productImg.setAttribute(\"src\", product.imageUrl);\r\n    productImg.setAttribute(\"alt\", product.altTxt);\r\n\r\n\r\n    cartItemContent.setAttribute(\"class\", \"cart__item__content\");\r\n    cartItemContentDescr.setAttribute(\"class\", \"cart__item__content__description\")\r\n    cartItemContentTitle.textContent = product.name;\r\n    cartItemContentColor.textContent = productColor;\r\n    cartItemContentPrice.textContent = Number(product.price) + \" €\";\r\n\r\n    cartItemSettings.setAttribute(\"class\", \"cart__item__content__settings\");\r\n    \r\n    settingsQuantity.setAttribute(\"class\", \"cart__item__content__settings__quantity\");\r\n    settingsQuantityText.textContent = \"Qté : \" + productQuantity;\r\n    settingsQuantityInput.setAttribute(\"type\", \"number\");\r\n    settingsQuantityInput.setAttribute(\"class\", \"itemQuantity\");\r\n    settingsQuantityInput.setAttribute(\"name\", \"itemQuantity\");\r\n    settingsQuantityInput.setAttribute(\"min\", \"1\");\r\n    settingsQuantityInput.setAttribute(\"max\", \"100\");\r\n    settingsQuantityInput.setAttribute(\"value\", productQuantity);\r\n\r\n    deleteContainer.setAttribute(\"class\", \"cart__item__content__settings__delete\");\r\n    deleteText.setAttribute(\"class\", \"deleteItem\");\r\n    deleteText.textContent = \"Supprimer\";\r\n\r\n    /* Attributs et contenus de balises existantes */\r\n    document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n    document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n\r\n        /* MODIFICATIONS DU PANIER */\r\n\r\n    /* Modification quantité: */\r\n    settingsQuantityInput.addEventListener(\"change\", function(e) {\r\n        //Comptage items depuis localStorage\r\n        cartCounter = updateCartCounter(cart);\r\n        //Récupération informations objet visé\r\n        productId = e.target.closest(\".cart__item\").getAttribute(\"data-id\");\r\n        productColor = e.target.closest(\".cart__item\").getAttribute(\"data-color\");\r\n        cartKey = productId + \" \" + productColor;\r\n        //Quantité objet avant modification de l'input\r\n        let initialQuantity =  Number(cart[cartKey]);\r\n        //Màj prix et quantité\r\n        totalPrice -= initialQuantity * Number(product.price);\r\n        productQuantity = Number(e.target.value);\r\n        totalPrice += productQuantity * Number(product.price);\r\n        //Màj quantité dans le localStorage\r\n        cart[cartKey] = productQuantity;\r\n        //Màj compteur via comptage localStorage\r\n        cartCounter = updateCartCounter(cart);\r\n        //Màj affichage\r\n        document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n        document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n\r\n    });\r\n    \r\n    /* Suppression d'un produit du panier: */\r\n    deleteText.addEventListener(\"click\", function(e) {\r\n        cartCounter -= Number(productQuantity);\r\n        totalPrice -= Number(productQuantity) * Number(product.price);\r\n        let cartKey = productId + \" \" + productColor;\r\n        cart.removeItem(cartKey);\r\n        document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n        document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n        e.target.closest(\"article\").remove();\r\n    });\r\n}\r\n\r\n/* *** ACTIONS *** */\r\n(async function() {\r\n    /* POUR CHAQUE PRODUIT DU PANIER... */\r\n    for(let i = 0; i < cart.length; i++){\r\n        /* Infos en local storage: */\r\n        var cartKey = localStorage.key(i);\r\n        var splitKey = cartKey.split(\" \");\r\n        productId = splitKey[0];\r\n        productColor = splitKey[1];\r\n        /* Quantité (input): */\r\n        productQuantity = cart.getItem(cartKey);\r\n        /* Màj compteur d'items */\r\n        cartCounter += Number(productQuantity);\r\n\r\n        /* Infos serveur: */\r\n        var product = await getProduct(productId);\r\n        totalPrice += Number(productQuantity) * Number(product.price);\r\n\r\n        /* Génération contenu page au loading: */\r\n        var pageContent = await hydrateDom(product, cartCounter, totalPrice, productQuantity, cartKey);\r\n    }\r\n    \r\n    /* REMPLISSAGE ET VÉRFICATIONS FORMULAIRE */\r\n    /* Accès au formulaire */\r\n    var userForm = document.getElementById(\"cart__order__form\");\r\n    userForm.addEventListener(\"submit\", function (e) {\r\n        checkForm(e);\r\n    });\r\n\r\n})()\r\n\r\n        \r\n\r\n\r\n"]}