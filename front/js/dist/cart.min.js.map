{"version":3,"sources":["cart.js"],"names":["cartCounter","productColor","productQuantity","cart","localStorage","totalPrice","Contact","firstName","lastName","address","city","email","_classCallCheck","this","value","getProducts","regeneratorRuntime","async","_context","prev","next","stop","getProduct","id","_context2","abrupt","fetch","then","httpBodyResponse","json","products","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","product","_id","err","error","alert","updateCartCounter","i","length","key","Number","checkForm","regNames","inputsToTest","document","getElementById","regexsToTest","inp","test","globalTest","name","textContent","createTable","productsTable","_i2","cartKey","splitKey","_context3","regAddress","regEmail","split","productId","includes","orderData","_context4","contact","awrap","sent","console","log","method","redirect","Content-type","body","JSON","stringify","data","response","clear","orderId","window","location","hydrateDom","cartItem","cartItemImg","productImg","cartItemContent","cartItemContentDescr","cartItemContentTitle","cartItemContentColor","cartItemContentPrice","cartItemSettings","settingsQuantity","settingsQuantityText","settingsQuantityInput","deleteContainer","deleteText","_context6","createElement","appendChild","setAttribute","imageUrl","altTxt","price","addEventListener","e","closest","target","getAttribute","initialQuantity","isInteger","parseInt","_i3","_context8","getItem","_context7","preventDefault","createData","postOrder"],"mappings":"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","file":"cart.min.js","sourcesContent":["/* ***** VARIABLES ***** */\r\nvar cart = localStorage;\r\n\r\nvar cartCounter = 0;\r\nvar totalPrice = 0;\r\n\r\nvar productId, productColor, productQuantity;\r\n\r\n\r\n/* ***** CLASSES ***** */\r\n\r\nclass Contact {\r\n    constructor (firstName, lastName, address, city, email) {\r\n        this.firstName = firstName.value;\r\n        this.lastName = lastName.value;\r\n        this.address = address.value;\r\n        this.city = city.value;\r\n        this.email = email.value;\r\n    }\r\n}\r\n\r\n\r\n\r\n/* ***** FONCTIONS ***** */\r\n\r\n/* *** GÉNÉRAL *** */\r\n\r\n/* RÉCUPÉRATION DES PRODUITS DANS LE LOCAL STORAGE */\r\nasync function getProducts(cart) {}\r\n\r\n/* RÉCUPÉRATION DE CHAQUE PRODUIT SUR SERVEUR */\r\nasync function getProduct(id) {\r\n    return fetch(\"http://localhost:3000/api/products\")\r\n      .then(function(httpBodyResponse) {\r\n        return httpBodyResponse.json();\r\n      })\r\n      .then(function(products) {\r\n          for (product of products) { \r\n              if (product._id == id) {  \r\n                return product;}\r\n          }\r\n      })\r\n      .catch(function(error) {\r\n          return alert(\"Désolé, il y a eu une erreur: \", error);\r\n      });\r\n}\r\n\r\n/* UPDATE COMPTEUR D'ARTICLES */\r\nfunction updateCartCounter(cart) {\r\n    cartCounter = 0;\r\n    for (let i = 0; i < cart.length; i++) {\r\n        let key = localStorage.key(i);\r\n        cartCounter += Number(cart[key]);\r\n    }\r\n    return cartCounter\r\n}\r\n\r\n/* VÉRIFICATION FORMULAIRE */\r\nfunction checkForm() {\r\n    /* Variables utiles */\r\n    // Éléments d'input à check:\r\n    let firstName = document.getElementById(\"firstName\");\r\n    let lastName = document.getElementById(\"lastName\");\r\n    let address = document.getElementById(\"address\");\r\n    let city = document.getElementById(\"city\");\r\n    let email = document.getElementById(\"email\");\r\n\r\n    // Regexs pour check:\r\n    let regNames = /^[a-zA-Z\\s'-]+$/;\r\n    let regAddress = /\\d+\\,{0,1}\\s+\\w+\\s+\\w+/;\r\n    let regEmail = /^[A-Za-z0-9._%+-]+@([A-Za-z0-9-]+\\.)+([A-Za-z0-9]{2,4})$/;\r\n\r\n    let inputsToTest = [firstName, lastName, address, city, email];\r\n    let regexsToTest = [regNames, regNames, regAddress, regNames, regEmail];\r\n\r\n    // Variable à renvoyer en fin de fonction (true si aucune erreur, false si au moins une erreur):\r\n\r\n    // Boucle de test:\r\n    for (i=0; i < inputsToTest.length; i++) {\r\n        let inp = inputsToTest[i];\r\n        let reg = regexsToTest[i];\r\n        // Valeur du test pour l'input en cours:\r\n        let test = reg.test(inp.value);\r\n        var tests = [];\r\n        \r\n        // Si false sur ce test, message d'erreur sous le champ correspondant:\r\n        if (test == false) {\r\n            var globalTest = false;\r\n            switch(inp.name) {\r\n                case \"firstName\": \r\n                    document.getElementById(inp.name + \"ErrorMsg\").textContent = \"Ce champ peut contenir des lettres majuscules et minuscules, apostrophes et tirets.\";\r\n                    break;\r\n                case \"lastName\": \r\n                    document.getElementById(inp.name + \"ErrorMsg\").textContent = \"Ce champ peut contenir des lettres majuscules et minuscules, apostrophes et tirets.\";\r\n                    break;\r\n                case \"address\": \r\n                    document.getElementById(inp.name + \"ErrorMsg\").textContent = \"Ce champ doit commencer par un ou plusieurs chiffres éventuellement suivis d'une virgule, puis obligatoirement des lettres.\";\r\n                    break;\r\n                case \"city\":\r\n                    document.getElementById(inp.name + \"ErrorMsg\").textContent = \"Ce champ doit contenir des lettres, et éventuellement une apostrophe et/ou un tiret.\";\r\n                    break;\r\n                case \"email\":\r\n                    document.getElementById(inp.name + \"ErrorMsg\").textContent = \"Ce champ doit contenir une adresse mail valide, par exemple: Kim.robert@kanap.com\";\r\n                    break;\r\n            }\r\n        }\r\n    } \r\n    return globalTest;\r\n}\r\n\r\n/* GÉNÉRATION TABLEAU PRODUITS */\r\nasync function createTable(cart) {\r\n    let productsTable = [];\r\n    for(let i = 0; i < cart.length; i++) {\r\n        let cartKey = localStorage.key(i);\r\n        let splitKey = cartKey.split(\" \");\r\n        productId = splitKey[0];\r\n        if (productsTable.includes(productId)) {\r\n            continue;\r\n        }\r\n        else {\r\n            productsTable[i] = productId;\r\n        }\r\n    }\r\n    return productsTable;\r\n}\r\n\r\n/* GÉNÉRATION DONNÉES ENVOI */\r\nasync function createData() {\r\n    contact = new Contact(firstName, lastName, address, city, email);\r\n    const products = await createTable(cart);\r\n    console.log(\"produits: \", products);\r\n    var orderData = {\r\n        contact,\r\n        products\r\n    };\r\n    console.log(\"Données à envoyer: \", orderData);\r\n    return orderData\r\n}\r\n\r\n\r\n/* ENVOI COMMANDE */\r\nasync function postOrder(data) {\r\n    fetch(\"http://localhost:3000/api/products/order\", {\r\n        method: \"POST\",\r\n        redirect: \"manual\",\r\n        headers: {\"Content-type\": \"application/json\"},\r\n        body: JSON.stringify(data),\r\n    })\r\n    .then(function(response) {\r\n        return response.json();\r\n    })\r\n    .then(function(json){\r\n        cart.clear();\r\n        console.log(\"Id de commande: \", json.orderId);\r\n        return window.location = \"confirmation.html?orderId=\" + json.orderId;\r\n    })\r\n    .catch(function(err) {\r\n        return console.log(\"Erreur: \", err);\r\n    })\r\n}\r\n\r\n/* *** DOM DYNAMIQUE ***  */\r\nasync function hydrateDom(product, cartCounter, totalPrice, productQuantity, cartKey) {\r\n    /* AFFICHAGE PRODUITS */\r\n    /* Création balises */\r\n    let cartItem = document.createElement(\"article\");\r\n    let cartItemImg = document.createElement(\"div\");\r\n    let productImg = document.createElement(\"img\");\r\n\r\n    let cartItemContent = document.createElement(\"div\");\r\n    let cartItemContentDescr = document.createElement(\"div\");\r\n    let cartItemContentTitle = document.createElement(\"h2\");\r\n    let cartItemContentColor = document.createElement(\"p\");\r\n    let cartItemContentPrice = document.createElement(\"p\");\r\n\r\n\r\n    let cartItemSettings = document.createElement(\"div\");\r\n\r\n    let settingsQuantity = document.createElement(\"div\");\r\n    let settingsQuantityText = document.createElement(\"p\");\r\n    let settingsQuantityInput = document.createElement(\"input\");\r\n\r\n    let deleteContainer = document.createElement(\"div\");\r\n    let deleteText = document.createElement(\"p\");\r\n\r\n\r\n    /* Position balises */\r\n    document.getElementById(\"cart__items\").appendChild(cartItem);\r\n    cartItem.appendChild(cartItemImg);\r\n    cartItemImg.appendChild(productImg);\r\n\r\n    cartItem.appendChild(cartItemContent);\r\n    cartItemContent.appendChild(cartItemContentDescr);\r\n    cartItemContentDescr.appendChild(cartItemContentTitle);\r\n    cartItemContentDescr.appendChild(cartItemContentColor);\r\n    cartItemContentDescr.appendChild(cartItemContentPrice);\r\n\r\n    cartItemContent.appendChild(cartItemSettings);\r\n\r\n    cartItemSettings.appendChild(settingsQuantity);\r\n    settingsQuantity.appendChild(settingsQuantityText);\r\n    settingsQuantity.appendChild(settingsQuantityInput);\r\n\r\n    cartItemSettings.appendChild(deleteContainer);\r\n    deleteContainer.appendChild(deleteText);\r\n\r\n\r\n    /* Attributs et contenu (balises créées avec js) */\r\n    cartItem.setAttribute(\"class\", \"cart__item\");\r\n    cartItem.setAttribute(\"data-id\", productId);\r\n    cartItem.setAttribute(\"data-color\", productColor);\r\n\r\n    cartItemImg.setAttribute(\"class\", \"cart__item__img\")\r\n\r\n    productImg.setAttribute(\"src\", product.imageUrl);\r\n    productImg.setAttribute(\"alt\", product.altTxt);\r\n\r\n\r\n    cartItemContent.setAttribute(\"class\", \"cart__item__content\");\r\n    cartItemContentDescr.setAttribute(\"class\", \"cart__item__content__description\")\r\n    cartItemContentTitle.textContent = product.name;\r\n    cartItemContentColor.textContent = productColor;\r\n    cartItemContentPrice.textContent = Number(product.price) + \" €\";\r\n\r\n    cartItemSettings.setAttribute(\"class\", \"cart__item__content__settings\");\r\n    \r\n    settingsQuantity.setAttribute(\"class\", \"cart__item__content__settings__quantity\");\r\n    settingsQuantityText.textContent = \"Qté : \" + productQuantity;\r\n    settingsQuantityInput.setAttribute(\"type\", \"number\");\r\n    settingsQuantityInput.setAttribute(\"class\", \"itemQuantity\");\r\n    settingsQuantityInput.setAttribute(\"name\", \"itemQuantity\");\r\n    settingsQuantityInput.setAttribute(\"min\", \"1\");\r\n    settingsQuantityInput.setAttribute(\"max\", \"100\");\r\n    settingsQuantityInput.setAttribute(\"value\", productQuantity);\r\n\r\n    deleteContainer.setAttribute(\"class\", \"cart__item__content__settings__delete\");\r\n    deleteText.setAttribute(\"class\", \"deleteItem\");\r\n    deleteText.textContent = \"Supprimer\";\r\n\r\n    /* Attributs et contenus (balises existantes dans le html) */\r\n    document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n    document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n\r\n    /* MODIFICATIONS DYNAMIQUES PANIER */\r\n\r\n    /* Modification quantité: */\r\n    settingsQuantityInput.addEventListener(\"change\", function(e) {\r\n        //Comptage items depuis localStorage\r\n        cartCounter = updateCartCounter(cart);\r\n        //Récupération informations objet visé\r\n        productId = e.target.closest(\".cart__item\").getAttribute(\"data-id\");\r\n        productColor = e.target.closest(\".cart__item\").getAttribute(\"data-color\");\r\n        cartKey = productId + \" \" + productColor;\r\n        //Quantité objet avant modification de l'input\r\n        let initialQuantity =  Number(cart[cartKey]);\r\n        //Màj prix et quantité\r\n        totalPrice -= initialQuantity * Number(product.price);\r\n        //Vérification valeur input quantité produit:\r\n        if (Number.isInteger(parseInt(e.target.value)) && e.target.value > 0) {\r\n            productQuantity = e.target.value;\r\n        }\r\n        else {\r\n            alert(\"Veuillez entrer une quantité valide (entier positif) pour chaque article ou le supprimer via le bouton adéquat.\");\r\n        }\r\n        totalPrice += productQuantity * Number(product.price);\r\n        //Màj quantité dans le localStorage\r\n        cart[cartKey] = productQuantity;\r\n        //Màj compteur via comptage localStorage\r\n        cartCounter = updateCartCounter(cart);\r\n        //Màj affichage\r\n        document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n        document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n\r\n    });\r\n    \r\n    /* Suppression d'un produit: */\r\n    deleteText.addEventListener(\"click\", function(e) {\r\n        cartCounter -= Number(productQuantity);\r\n        totalPrice -= Number(productQuantity) * Number(product.price);\r\n        cart.removeItem(cartKey);\r\n        window.location.reload();\r\n        document.getElementById(\"totalQuantity\").textContent = cartCounter;\r\n        document.getElementById(\"totalPrice\").textContent = totalPrice;\r\n        localStorage.removeItem(cartKey);\r\n    });\r\n}\r\n\r\n\r\n\r\n/* ***** ACTIONS ***** */\r\n(async function() {\r\n    /* SI PANIER VIDE */ \r\n    if (cart.length == 0) {\r\n        // Désactivation du bouton de commande: \r\n        alert(\"Attention: votre panier est vide, vous ne pouvez pas commander\");\r\n        document.getElementById(\"order\").setAttribute(\"diabled\", \"true\");\r\n    }\r\n    /* SINON */\r\n    else {\r\n        // Affichage dynamique produit par produit:\r\n        for(let i = 0; i < cart.length; i++){\r\n            // (Récupération infos produits en local storage:)\r\n            var cartKey = localStorage.key(i);\r\n            var splitKey = cartKey.split(\" \");\r\n            productId = splitKey[0];\r\n            productColor = splitKey[1];\r\n            productQuantity = cart.getItem(cartKey);\r\n\r\n            // (Màj compteur d'items:)\r\n            cartCounter += Number(productQuantity);\r\n    \r\n            // (Infos serveur:)\r\n            var product = await getProduct(productId);\r\n            totalPrice += Number(productQuantity) * Number(product.price);\r\n    \r\n            // (Contenu dynamique page:)\r\n            const pageContent = await hydrateDom(product, cartCounter, totalPrice, productQuantity, cartKey);\r\n        }\r\n        \r\n        // Si panier vide:\r\n        if (cart.length == 0) {\r\n            alert('Impossible de passer commande, votre panier est vide!');\r\n            let orderButton = document.getElementById(\"order\");\r\n            orderButton.setAttribute(\"disabled\", \"true\");\r\n        }\r\n\r\n        // Si panier non vide:\r\n        /* Vérification formulaire: */\r\n        const userForm = document.getElementById(\"cart__order__form\");\r\n        userForm.addEventListener(\"submit\", async function (e) {\r\n            e.preventDefault();\r\n            // Si panier plein:\r\n            let check = checkForm(e);\r\n            if (check == false) {\r\n                return false;\r\n            }\r\n            let data = await createData();\r\n            let order = await postOrder(data);\r\n        });\r\n    }\r\n    return console.log(\"fin input\");\r\n})()\r\n\r\n\r\n        \r\n\r\n\r\n"]}